{
  "entityType" : "WIDGET_TYPE",
  "entity" : {
    "fqn" : "mada_bms.ac_control",
    "name" : "AC Control",
    "deprecated" : false,
    "image" : null,
    "description" : null,
    "descriptor" : {
      "type" : "latest",
      "sizeX" : 13.5,
      "sizeY" : 5.5,
      "resources" : [ ],
      "templateHtml" : "<div class=\"acControl\" style=\"position: relative\">\r\n    <div class=\"acControl-header\" fxlayout>\r\n        <div class=\"acControl-titleContainer\">\r\n            <svg width=\"70\" height=\"70\" viewBox=\"0 0 48 49\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\">\r\n                <ellipse cx=\"24\" cy=\"24.1004\" rx=\"24\"\r\n                    ry=\"24.1004\" fill=\"#D9D9D9\" />\r\n                <path\r\n                    d=\"M17.3809 13.9086H32.6191C33.2905 13.9086 33.9343 14.1764 34.4089 14.653L17.3809 13.9086ZM17.3809 13.9086C16.7095 13.9086 16.0656 14.1764 15.5911 14.653L17.3809 13.9086ZM33.5229 23.096L33.5229 23.0961C33.2831 23.3369 32.9579 23.472 32.6191 23.472H17.3809C17.042 23.472 16.7169 23.3369 16.4771 23.0961L16.4771 23.0961C16.2372 22.8553 16.1023 22.5285 16.1023 22.1875V16.4494C16.1023 16.1085 16.2372 15.7817 16.4771 15.541L16.4772 15.5409C16.7169 15.3 17.0421 15.1648 17.3809 15.1648H32.6191C32.958 15.1648 33.2831 15.3 33.5228 15.5409L33.5229 15.541C33.7628 15.7818 33.8977 16.1085 33.8977 16.4494V22.1875C33.8977 22.5285 33.7628 22.8553 33.5229 23.096ZM28.3334 25.8631H28.1834V26.0131V30.7947C28.1834 32.0439 28.8469 33.1984 29.9248 33.8233C31.0028 34.4483 32.3307 34.4483 33.4086 33.8233L33.3334 33.6935L33.4086 33.8233C34.4863 33.1984 35.15 32.0439 35.15 30.7947C35.15 30.4483 34.8701 30.1668 34.5238 30.1668C34.1774 30.1668 33.8977 30.4486 33.8977 30.7949C33.8977 31.5958 33.4721 32.3356 32.7819 32.7358C32.0918 33.136 31.2416 33.136 30.5515 32.7358L30.4763 32.8656L30.5515 32.7358C29.8612 32.3356 29.4358 31.5959 29.4358 30.7951V26.0131V25.8631H29.2858H28.3334ZM20.7144 25.8631H20.5644V26.0131V30.7947C20.5644 31.5955 20.139 32.3353 19.4486 32.7355L19.5239 32.8653L19.4486 32.7355C18.7586 33.1357 17.9083 33.1357 17.2183 32.7355C16.5281 32.3353 16.1025 31.5955 16.1025 30.7947C16.1025 30.4484 15.8227 30.1666 15.4764 30.1666C15.1299 30.1666 14.8502 30.4484 14.8502 30.7947C14.8502 32.0439 15.5138 33.1986 16.5915 33.8235L16.6668 33.6938L16.5915 33.8235C17.6695 34.4485 18.9974 34.4485 20.0754 33.8235C21.1532 33.1986 21.8167 32.0443 21.8167 30.7951V26.0131V25.8631H21.6667H20.7144ZM24.5238 25.863H24.3738V26.013V29.8383C24.3738 30.1846 24.6537 30.4666 25.0001 30.4666C25.1664 30.4666 25.3257 30.4002 25.4431 30.2823C25.5605 30.1644 25.6262 30.0046 25.6262 29.8383V26.013V25.863H25.4762H24.5238ZM15.5911 14.6531C15.1164 15.1296 14.85 15.7759 14.85 16.4494V22.1876C14.85 22.8614 15.1164 23.5075 15.5911 23.9841C16.0656 24.4606 16.7095 24.7286 17.3809 24.7286H32.6191C33.2905 24.7286 33.9344 24.4606 34.4089 23.9841C34.8835 23.5075 35.15 22.8614 35.15 22.1876V16.4494C35.15 15.7759 34.8836 15.1295 34.4089 14.6531L15.5911 14.6531ZM32.1097 21.6752C32.227 21.5574 32.2929 21.3976 32.2929 21.2312C32.2929 21.0648 32.227 20.905 32.1097 20.7872C31.9923 20.6694 31.8329 20.603 31.6666 20.603H18.3337C17.9871 20.603 17.7074 20.885 17.7074 21.2312C17.7074 21.5774 17.9871 21.8594 18.3337 21.8594H31.6666C31.8329 21.8594 31.9923 21.793 32.1097 21.6752Z\"\r\n                    fill=\"#424142\" stroke=\"#424142\"\r\n                    stroke-width=\"0.3\" />\r\n            </svg>\r\n            <h4 class=\"title\">Air Conditioning</h4>\r\n        </div>\r\n    </div>\r\n    <div class=\"middle\">\r\n        <div id=\"tabs\">\r\n            <ul id=\"acs\"></ul>\r\n        </div>\r\n        <div id=\"tabContentContainer\"></div>\r\n    </div>\r\n    <!--<div id=\"dialog\" class=\"confirmationDialog\"-->\r\n    <!--    style=\"display: none\">-->\r\n        <!--<div class=\"acControl-titleContainer\"-->\r\n        <!--    style=\"padding: 10px\">-->\r\n        <!--    <svg width=\"48\" height=\"49\" viewBox=\"0 0 48 49\"-->\r\n        <!--        fill=\"none\"-->\r\n        <!--        xmlns=\"http://www.w3.org/2000/svg\">-->\r\n        <!--        <ellipse cx=\"24\" cy=\"24.1004\" rx=\"24\"-->\r\n        <!--            ry=\"24.1004\" fill=\"#D9D9D9\" />-->\r\n        <!--        <path-->\r\n        <!--            d=\"M17.3809 13.9086H32.6191C33.2905 13.9086 33.9343 14.1764 34.4089 14.653L17.3809 13.9086ZM17.3809 13.9086C16.7095 13.9086 16.0656 14.1764 15.5911 14.653L17.3809 13.9086ZM33.5229 23.096L33.5229 23.0961C33.2831 23.3369 32.9579 23.472 32.6191 23.472H17.3809C17.042 23.472 16.7169 23.3369 16.4771 23.0961L16.4771 23.0961C16.2372 22.8553 16.1023 22.5285 16.1023 22.1875V16.4494C16.1023 16.1085 16.2372 15.7817 16.4771 15.541L16.4772 15.5409C16.7169 15.3 17.0421 15.1648 17.3809 15.1648H32.6191C32.958 15.1648 33.2831 15.3 33.5228 15.5409L33.5229 15.541C33.7628 15.7818 33.8977 16.1085 33.8977 16.4494V22.1875C33.8977 22.5285 33.7628 22.8553 33.5229 23.096ZM28.3334 25.8631H28.1834V26.0131V30.7947C28.1834 32.0439 28.8469 33.1984 29.9248 33.8233C31.0028 34.4483 32.3307 34.4483 33.4086 33.8233L33.3334 33.6935L33.4086 33.8233C34.4863 33.1984 35.15 32.0439 35.15 30.7947C35.15 30.4483 34.8701 30.1668 34.5238 30.1668C34.1774 30.1668 33.8977 30.4486 33.8977 30.7949C33.8977 31.5958 33.4721 32.3356 32.7819 32.7358C32.0918 33.136 31.2416 33.136 30.5515 32.7358L30.4763 32.8656L30.5515 32.7358C29.8612 32.3356 29.4358 31.5959 29.4358 30.7951V26.0131V25.8631H29.2858H28.3334ZM20.7144 25.8631H20.5644V26.0131V30.7947C20.5644 31.5955 20.139 32.3353 19.4486 32.7355L19.5239 32.8653L19.4486 32.7355C18.7586 33.1357 17.9083 33.1357 17.2183 32.7355C16.5281 32.3353 16.1025 31.5955 16.1025 30.7947C16.1025 30.4484 15.8227 30.1666 15.4764 30.1666C15.1299 30.1666 14.8502 30.4484 14.8502 30.7947C14.8502 32.0439 15.5138 33.1986 16.5915 33.8235L16.6668 33.6938L16.5915 33.8235C17.6695 34.4485 18.9974 34.4485 20.0754 33.8235C21.1532 33.1986 21.8167 32.0443 21.8167 30.7951V26.0131V25.8631H21.6667H20.7144ZM24.5238 25.863H24.3738V26.013V29.8383C24.3738 30.1846 24.6537 30.4666 25.0001 30.4666C25.1664 30.4666 25.3257 30.4002 25.4431 30.2823C25.5605 30.1644 25.6262 30.0046 25.6262 29.8383V26.013V25.863H25.4762H24.5238ZM15.5911 14.6531C15.1164 15.1296 14.85 15.7759 14.85 16.4494V22.1876C14.85 22.8614 15.1164 23.5075 15.5911 23.9841C16.0656 24.4606 16.7095 24.7286 17.3809 24.7286H32.6191C33.2905 24.7286 33.9344 24.4606 34.4089 23.9841C34.8835 23.5075 35.15 22.8614 35.15 22.1876V16.4494C35.15 15.7759 34.8836 15.1295 34.4089 14.6531L15.5911 14.6531ZM32.1097 21.6752C32.227 21.5574 32.2929 21.3976 32.2929 21.2312C32.2929 21.0648 32.227 20.905 32.1097 20.7872C31.9923 20.6694 31.8329 20.603 31.6666 20.603H18.3337C17.9871 20.603 17.7074 20.885 17.7074 21.2312C17.7074 21.5774 17.9871 21.8594 18.3337 21.8594H31.6666C31.8329 21.8594 31.9923 21.793 32.1097 21.6752Z\"-->\r\n        <!--            fill=\"#424142\" stroke=\"#424142\"-->\r\n        <!--            stroke-width=\"0.3\" />-->\r\n        <!--    </svg>-->\r\n        <!--    <h6 class=\"title\">Air Conditioning</h6>-->\r\n        <!--</div>-->\r\n    <!--</div>-->\r\n</div>",
      "templateCss" : "/*#container {*/\n/*    overflow: auto;*/\n/*}*/\n\n@font-face {\n    font-family: \"TT Mussels\";\n    font-weight: bold;\n    src: url(data:application/font-woff;base64,);\n}\n\n@font-face {\n    font-family: \"TT Mussels\";\n    font-style: normal;\n    src: url(data:application/font-woff;base64,);\n}\n\n/*.tbDatasource-container {*/\n/*    margin: 5px;*/\n/*    padding: 8px;*/\n/*}*/\n\n/*.tbDatasource-title {*/\n/*    font-size: 1.200rem;*/\n/*    font-weight: 500;*/\n/*    padding-bottom: 10px;*/\n/*}*/\n\n/*.tbDatasource-table {*/\n/*    width: 100%;*/\n/*    box-shadow: 0 0 10px #ccc;*/\n/*    border-collapse: collapse;*/\n/*    white-space: nowrap;*/\n/*    font-size: 1.000rem;*/\n/*    color: #757575;*/\n/*}*/\n\n/*.tbDatasource-table td {*/\n/*    position: relative;*/\n/*    border-top: 1px solid rgba(0, 0, 0, 0.12);*/\n/*    border-bottom: 1px solid rgba(0, 0, 0, 0.12);*/\n/*    padding: 0px 18px;*/\n/*    box-sizing: border-box;*/\n/*}*/\n\n.acControl {\n    height: 100%;\n    background-color: #333333;\n    border-radius: 10px;\n    font-family: \"TT Mussels\";\n    font-weight: 700;\n    color: #D9D9D9;\n}\n\n.acControl-header {\n    padding: 10px 20px 10px 20px;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.acControl-titleContainer {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n}\n\n.title {\n    margin-left: 10px;\n}\n\n.acControl-switch {\n    width: 51px;\n    height: 31px;\n    position: absolute;\n    top: 5%;\n    right: 7%;\n}\n\n.checkbox {\n    opacity: 0;\n    width: 0;\n    height: 0;\n    position: absolute;\n}\n\n.switch {\n    width: 100%;\n    height: 100%;\n    display: block;\n    background-color: #424142;\n    border-radius: 16px;\n    cursor: pointer;\n    transition: all 0.2s ease-out;\n}\n\n.slider {\n    width: 27px;\n    height: 27px;\n    position: absolute;\n    left: calc(50% - 27px/2 - 10px);\n    top: calc(50% - 27px/2);\n    border-radius: 50%;\n    background: #FFFFFF;\n    box-shadow: 0px 3px 8px rgba(0, 0, 0, 0.15), 0px 3px 1px rgba(0, 0, 0, 0.06);\n    transition: all 0.2s ease-out;\n    cursor: pointer;\n}\n\n.checkbox:checked+.switch {\n    background-color: #00AA6C;\n}\n\n.checkbox:checked+.switch .slider {\n    left: calc(50% - 27px/2 + 10px);\n    top: calc(50% - 27px/2);\n}\n\n#tabs {\n    left: 0;\n    /*display: flex;*/\n    /*flex-direction: column;*/\n    /*align-items: flex-start*/\n}\n\n#acs {\n    list-style-type: none;\n    padding: 0;\n}\n\n.acButton {\n    color: #D9D9D9;\n    background-color: #333333;\n    font-size: 20px;\n    padding: 6px 40px 6px 8px;\n    margin-bottom: 15px;\n    vertical-align: middle;\n    width: fit-content;\n}\n\n.selectedTab {\n    color: #00AA6C;\n    background-color: #424142;\n    border-radius: 0px 25px 25px 0px;\n}\n\n#temperatureControl {\n    background-color: #424142;\n    border-radius: 30px;\n    font-size: 25px;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-evenly;\n    width: 140px;\n    align-items: center;\n    margin-bottom: 12%;\n}\n\n#setTemp {\n    margin: 10px;\n    font-size: 22px;\n}\n\n#settings {\n    display: flex;\n    flex-direction: row;\n    width: 52%;\n    height: 70%;\n    align-items: stretch;\n    justify-content: space-around;\n}\n\n#settingsLabels {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: space-evenly;\n    /*scale: 0.8;*/\n}\n\n#settingsIcons {\n    height: 100%;\n    width: 50%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n}\n\n.selected {\n    fill: #00AA6C;\n}\n\n.selectedSwing {\n    stroke: #00AA6C;\n    fill: #00AA6C;\n}\n\n.middle {\n    display: flex;\n    flex-direction: row;\n    /*background-color: red;*/\n    height: 100%;\n}\n\n.fanTemp {\n    display: flex;\n    flex-direction: column;\n}\n\n#fanSection {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    /*scale: 1.1;*/\n}\n\n#tabContentContainer {\n    width: 100%;\n    height: 100%;\n}\n\n.tabContent {\n    display: none;\n}\n\n.tabContent.active {\n    display: flex;\n    align-items: center;\n    width: 100%;\n    height: 80%;\n    justify-content: space-evenly;\n}\n\n#sensorsContainer {\nbackground-color: #424142;\n    border-radius: 25px 0px 0px 25px;\n    position: absolute;\n    top: 24%;\n    right: 0;\n    display: inline-flex;\n    font-weight: 900;\n    justify-content: space-around;\n    width: 45%;\n    /* max-width: 100%; */\n    min-width: 40%;\n}\n\n#mode,\n#programs,\n#swing {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    /*scale: 1.1;*/\n}\n\n#swing {\n    display: flex;\n    justify-content: flex-start;\n}\n\n#horizontalSwing {\n    margin-left: 15%;\n}\n\n.sensor {\n    display: flex;\n    align-items: center;\n    padding: 2%;\n}\n\n.value {\n    font-size: 20px;\n    font-weight: 900;\n    padding: 3%;\n}\n\n.actual {\n    font-size: 14px;\n    /*padding: 5%;*/\n    font-weight: 900;\n}\n\n.confirmationDialog {\n    width: 100%;\n    height: 60%;\n    position: absolute;\n    align-items: center;\n    flex-direction: column;\n    justify-content: center;\n    visibility: hidden;\n}\n\n.dialogContent {\n    width: 100%;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n}\n\n.dialogButtons {\n    display: flex;\n    width: 100%;\n    align-items: center;\n    justify-content: center;\n}\n\n.dialogButton {\n    all: unset;\n    font-family: 'TT Mussels';\n    background-color: #424142;\n    padding: 1.5% 11% 1.5% 11%;\n    border-radius: 37px;\n    margin: 0 2% 0 2%;\n    cursor: pointer;\n}\n\n.dialogText {\n    width: 100%;\n    margin-bottom: 10%;\n    margin-left: 48%;\n    font-size: larger;\n    background-color: #424142;\n    padding: 1% 0% 1% 3%;\n    border-radius: 25px 0px 0px 25px;\n}\n\n#yes {\n    color: #00AA6C;\n}\n\n#no {\n    color: #F72119;\n}",
      "controllerScript" : "const acsArray = [];\nlet entityId;\nlet attributeService;\n\nconst loadTabs = function(numberOfAcs) {\n    const buttonsContainer = document.getElementById(\n        \"acs\");\n\n    const tabContentContainer = document.getElementById(\n        'tabContentContainer');\n\n    var acButton = '';\n    var tabContents = '';\n\n    for (var i = 0; i < numberOfAcs; i++) {\n        acButton +=\n            `<li data-id=${i}  class=\"acButton\">AC${i+1}</li>`;\n        tabContents += generateTabContent(i);\n    }\n\n    buttonsContainer.innerHTML = acButton;\n    tabContentContainer.innerHTML = tabContents;\n\n    var buttons = buttonsContainer\n        .getElementsByClassName(\n            \"acButton\");\n    for (var j = 0; j < buttons.length; j++) {\n        buttons[j].addEventListener(\"click\",\n            function() {\n                var tabId = this.dataset.id;\n                selectTab(tabId);\n            });\n    }\n};\n\n\nconst generateTabContent = function(tabId) {\n    var content = `\n  <div data-id=\"content${tabId}\" id=\"content${tabId}\" class=\"tabContent\">\n  <div class=\"acControl-switch\">\n    <input type=\"checkbox\" class=\"checkbox\" id=\"checkbox${tabId}\" />\n    <label class=\"switch\" for=\"checkbox${tabId}\">\n      <span class=\"slider\"></span>\n    </label>\n  </div>\n  <div id=\"fanSection\">\n    <div id=\"temperatureControl\">\n      <svg\n        id=\"increment\"\n        width=\"29\"\n        height=\"29\"\n        viewBox=\"0 0 29 29\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <ellipse\n          cx=\"14.6801\"\n          cy=\"14.6801\"\n          rx=\"14.04\"\n          ry=\"14.04\"\n          fill=\"#D9D9D9\"\n        />\n        <path\n          d=\"M11.4399 14.6176H13.9488V12.0547H15.419V14.6176H17.9199V15.9989H15.419V18.5618H13.9488V15.9989H11.4399V14.6176Z\"\n          fill=\"#00AA6C\"\n        />\n      </svg>\n      <div id=\"setTemp\">20°</div>\n      <svg\n        id=\"decrement\"\n        width=\"29\"\n        height=\"29\"\n        viewBox=\"0 0 29 29\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <ellipse\n          cx=\"14.6801\"\n          cy=\"14.2402\"\n          rx=\"14.04\"\n          ry=\"14.04\"\n          fill=\"#D9D9D9\"\n        />\n        <path\n          d=\"M11.4399 16.2105V14.0415H17.9199V16.2105H11.4399Z\"\n          fill=\"#00AA6C\"\n        />\n      </svg>\n    </div>\n    <div id=\"fanControlDiv\">\n      <svg\n        id=\"fanControlContainer\"\n        width=\"138\"\n        height=\"37\"\n        viewBox=\"0 0 138 37\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <rect\n          x=\"138\"\n          y=\"37\"\n          width=\"138\"\n          height=\"37\"\n          rx=\"18.5\"\n          transform=\"rotate(-180 138 37)\"\n          fill=\"#424142\"\n        />\n        <path id='nextModeIcon'\n          d=\"M114.214 15.4582L117.454 18.6982L114.214 21.9382L113.458 21.1822L115.942 18.6982L113.458 16.2142L114.214 15.4582Z\"\n          fill=\"#00AA6C\"\n        />\n        <path\n          fill-rule=\"evenodd\"\n          clip-rule=\"evenodd\"\n          d=\"M114.214 15L117.912 18.6982L114.214 22.3964L113 21.1822L115.484 18.6982L113 16.2142L114.214 15ZM113.458 16.2142L114.214 15.4582L117.454 18.6982L114.214 21.9382L113.458 21.1822L115.942 18.6982L113.458 16.2142Z\"\n          fill=\"#00AA6C\"\n        />\n        <text\n          xmlns=\"http://www.w3.org/2000/svg\"\n          id=\"5\"\n          fill=\"#00AA6C\"\n          xml:space=\"preserve\"\n          style=\"white-space: pre\"\n          font-family=\"TT Mussels\"\n          font-size=\"15\"\n          font-weight=\"bold\"\n          letter-spacing=\"0em\"\n        >\n          <tspan id=\"fanSpeedValue\" x=\"89.6997\" y=\"24.2092\">5</tspan>\n        </text>\n        <g id=\"fanSpeedBars\">\n          <path\n            id=\"bar1\"\n            class=\"bar\"\n            fill-rule=\"evenodd\"\n            clip-rule=\"evenodd\"\n            d=\"M58 25.9603L58 19.4893L61.9272 19.4893L61.9272 25.9603L58 25.9603Z\"\n            fill=\"#858585\"\n          />\n          <path\n            id=\"bar2\"\n            class=\"bar\"\n            fill-rule=\"evenodd\"\n            clip-rule=\"evenodd\"\n            d=\"M63.8887 25.9503L63.8887 17.3223L67.8159 17.3223L67.8159 25.9503L63.8887 25.9503Z\"\n            fill=\"#858585\"\n          />\n          <path\n            id=\"bar3\"\n            class=\"bar\"\n            fill-rule=\"evenodd\"\n            clip-rule=\"evenodd\"\n            d=\"M69.7813 25.9423L69.7813 15.1572L73.7085 15.1572L73.7085 25.9423L69.7813 25.9423Z\"\n            fill=\"#858585\"\n          />\n          <path\n            id=\"bar4\"\n            class=\"bar\"\n            fill-rule=\"evenodd\"\n            clip-rule=\"evenodd\"\n            d=\"M75.673 25.9421L75.673 13L79.6001 13L79.6001 25.9421L75.673 25.9421Z\"\n            fill=\"#858585\"\n          />\n          <path\n            id=\"bar5\"\n            class=\"bar\"\n            fill-rule=\"evenodd\"\n            clip-rule=\"evenodd\"\n            d=\"M81.9595 26L81.9595 11L85.9595 11L85.9595 26L81.9595 26Z\"\n            fill=\"#858585\"\n          />\n        </g>\n        <g xmlns=\"http://www.w3.org/2000/svg\" id=\"fanMode\">\n          <ellipse\n            id=\"Ellipse 3\"\n            cx=\"22.5\"\n            cy=\"18.5\"\n            rx=\"12.5\"\n            ry=\"12.5\"\n            fill=\"#00AA6C\"\n          />\n          <path\n            id=\"mode_fan\"\n            d=\"M21.557 25.2311C20.9849 25.2311 20.5502 25.06 20.2529 24.7178C19.9557 24.3757 19.807 23.9859 19.807 23.5484C19.807 23.2567 19.8715 22.9735 20.0005 22.6986C20.1295 22.4238 20.3287 22.1966 20.5979 22.0171C20.8447 21.8601 21.0438 21.6582 21.1952 21.4114C21.3467 21.1646 21.4504 20.9009 21.5065 20.6205L21.3046 20.5195C21.2373 20.4859 21.1756 20.4466 21.1195 20.4017L19.5714 20.957C19.3807 21.0243 19.1956 21.0804 19.0162 21.1253C18.8367 21.1702 18.6516 21.1926 18.4609 21.1926C17.7541 21.1926 17.1287 20.8841 16.5847 20.2671C16.0406 19.6501 15.7686 18.7471 15.7686 17.558C15.7686 16.9859 15.9396 16.5512 16.2818 16.2539C16.6239 15.9566 17.0081 15.808 17.4344 15.808C17.7261 15.808 18.0121 15.8725 18.2926 16.0015C18.573 16.1305 18.803 16.3296 18.9825 16.5989C19.1395 16.8457 19.3415 17.0448 19.5883 17.1962C19.8351 17.3477 20.0987 17.4514 20.3791 17.5075L20.4801 17.3056C20.5137 17.2383 20.553 17.1766 20.5979 17.1205L20.0426 15.5724C19.9753 15.3817 19.9192 15.1966 19.8743 15.0171C19.8295 14.8376 19.807 14.6582 19.807 14.4787C19.807 13.7607 20.1155 13.1297 20.7325 12.5856C21.3495 12.0416 22.2525 11.7695 23.4416 11.7695C24.0137 11.7695 24.4484 11.9406 24.7457 12.2828C25.043 12.6249 25.1916 13.0091 25.1916 13.4354C25.1916 13.7271 25.1271 14.0131 24.9981 14.2936C24.8691 14.574 24.67 14.804 24.4008 14.9835C24.154 15.1405 23.9549 15.3424 23.8034 15.5892C23.652 15.836 23.5482 16.0997 23.4921 16.3801L23.694 16.4811C23.7613 16.5147 23.823 16.554 23.8791 16.5989L25.4272 16.0267C25.6179 15.9594 25.8002 15.9061 25.9741 15.8669C26.148 15.8276 26.3303 15.808 26.521 15.808C27.4296 15.808 28.1083 16.1838 28.557 16.9354C29.0057 17.687 29.2301 18.5227 29.2301 19.4426C29.2301 20.0147 29.0506 20.4494 28.6916 20.7467C28.3327 21.044 27.9344 21.1926 27.4969 21.1926C27.2165 21.1926 26.9444 21.1281 26.6808 20.9991C26.4172 20.8701 26.1956 20.671 26.0162 20.4017C25.8591 20.1549 25.6572 19.9558 25.4104 19.8044C25.1636 19.6529 24.9 19.5492 24.6195 19.4931L24.5186 19.695C24.4849 19.7623 24.4456 19.824 24.4008 19.8801L24.9561 21.4282C25.0234 21.6077 25.0795 21.7787 25.1243 21.9414C25.1692 22.1041 25.1916 22.2751 25.1916 22.4546C25.2028 23.1838 24.9 23.8288 24.283 24.3897C23.666 24.9506 22.7573 25.2311 21.557 25.2311ZM22.4993 19.5099C22.7798 19.5099 23.0182 19.4118 23.2145 19.2154C23.4108 19.0191 23.5089 18.7807 23.5089 18.5003C23.5089 18.2199 23.4108 17.9815 23.2145 17.7852C23.0182 17.5888 22.7798 17.4907 22.4993 17.4907C22.2189 17.4907 21.9805 17.5888 21.7842 17.7852C21.5879 17.9815 21.4897 18.2199 21.4897 18.5003C21.4897 18.7807 21.5879 19.0191 21.7842 19.2154C21.9805 19.4118 22.2189 19.5099 22.4993 19.5099ZM21.7253 16.2791C21.7926 16.2567 21.8627 16.2371 21.9356 16.2203C22.0085 16.2034 22.0787 16.1894 22.146 16.1782C22.2357 15.707 22.4068 15.2695 22.6592 14.8657C22.9116 14.4618 23.2453 14.1253 23.6604 13.8561C23.7165 13.8112 23.7613 13.7551 23.795 13.6878C23.8287 13.6205 23.8455 13.5364 23.8455 13.4354C23.8455 13.3457 23.8118 13.2699 23.7445 13.2082C23.6772 13.1465 23.5762 13.1157 23.4416 13.1157C23.0153 13.1157 22.533 13.2082 21.9945 13.3933C21.4561 13.5784 21.1756 13.9402 21.1532 14.4787C21.1532 14.5796 21.1672 14.675 21.1952 14.7647C21.2233 14.8545 21.2485 14.9386 21.271 15.0171L21.7253 16.2791ZM18.4609 19.8465C18.6179 19.8465 18.803 19.8072 19.0162 19.7287L20.2782 19.2743C20.2557 19.207 20.2361 19.1369 20.2193 19.064C20.2024 18.9911 20.1884 18.921 20.1772 18.8537C19.7061 18.7639 19.2686 18.5928 18.8647 18.3404C18.4609 18.088 18.1243 17.7543 17.8551 17.3392C17.8102 17.2832 17.7513 17.2383 17.6784 17.2046C17.6055 17.171 17.5242 17.1541 17.4344 17.1541C17.3335 17.1541 17.2549 17.1878 17.1988 17.2551C17.1428 17.3224 17.1147 17.4234 17.1147 17.558C17.1147 18.1638 17.2297 18.6966 17.4597 19.1566C17.6896 19.6165 18.0234 19.8465 18.4609 19.8465ZM21.557 23.8849C22.0843 23.8849 22.6031 23.7783 23.1135 23.5652C23.6239 23.3521 23.8679 22.9819 23.8455 22.4546C23.8455 22.3649 23.8315 22.2807 23.8034 22.2022C23.7754 22.1237 23.7501 22.0508 23.7277 21.9835L23.2734 20.7215C23.2061 20.7439 23.1359 20.7635 23.063 20.7803C22.9901 20.7972 22.92 20.8112 22.8527 20.8224C22.7629 21.2936 22.5919 21.7311 22.3395 22.1349C22.0871 22.5388 21.7533 22.8753 21.3383 23.1445C21.2822 23.1894 21.2345 23.2483 21.1952 23.3212C21.156 23.3941 21.142 23.4699 21.1532 23.5484C21.1644 23.6381 21.198 23.7166 21.2541 23.784C21.3102 23.8513 21.4112 23.8849 21.557 23.8849ZM27.4969 19.8465C27.5979 19.8465 27.6876 19.8184 27.7662 19.7623C27.8447 19.7062 27.8839 19.5997 27.8839 19.4426C27.8839 19.0163 27.7942 18.5311 27.6147 17.9871C27.4352 17.443 27.0706 17.1654 26.521 17.1541C26.42 17.1541 26.3246 17.1654 26.2349 17.1878C26.1452 17.2102 26.061 17.2327 25.9825 17.2551L24.7205 17.7263C24.7429 17.7936 24.7625 17.8637 24.7794 17.9366C24.7962 18.0095 24.8102 18.0796 24.8214 18.1469C25.2926 18.2367 25.7301 18.4078 26.1339 18.6602C26.5378 18.9126 26.8743 19.2463 27.1436 19.6614C27.1772 19.7174 27.2277 19.7623 27.295 19.796C27.3623 19.8296 27.4296 19.8465 27.4969 19.8465Z\"\n            fill=\"#424142\"\n          />\n        </g>\n      </svg>\n    </div>\n  </div>\n  <div id=\"sensorsContainer\">\n    <div id=\"temp\" class=\"sensor\">\n      <div class=\"value\" id=\"tempValue\">30</div>\n      <div class=\"actual\">\n        Actual\n        <br />\n        Temperature\n      </div>\n    </div>\n    <div id=\"Humidity\" class=\"sensor\">\n      <div class=\"value\" id=\"humidityValue\">30</div>\n      <div class=\"actual\">\n        Actual <br />\n        Humidity\n      </div>\n    </div>\n  </div>\n  <div id=\"settings\">\n    <div id=\"settingsLabels\">\n      <h6>Mode</h6>\n      <h6>Programs</h6>\n      <h6>Swing</h6>\n    </div>\n    <div id=\"settingsIcons\">\n      <div id=\"mode\">\n        <svg\n          width=\"22\"\n          height=\"21\"\n          viewBox=\"0 0 22 21\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          id=\"heat\"\n          class=\"modeOption\"\n        >\n          <path\n            d=\"M11.1706 13.1308C11.9522 13.1308 12.6165 12.8573 13.1637 12.3101C13.7108 11.763 13.9843 11.0987 13.9843 10.3171C13.9843 9.53548 13.7108 8.87112 13.1637 8.324C12.6165 7.77688 11.9522 7.50333 11.1706 7.50333C10.389 7.50333 9.72464 7.77688 9.17752 8.324C8.6304 8.87112 8.35684 9.53548 8.35684 10.3171C8.35684 11.0987 8.6304 11.763 9.17752 12.3101C9.72464 12.8573 10.389 13.1308 11.1706 13.1308ZM11.1706 15.0067C9.87314 15.0067 8.76718 14.5494 7.85271 13.635C6.93824 12.7205 6.48101 11.6145 6.48101 10.3171C6.48101 9.01962 6.93824 7.91366 7.85271 6.9992C8.76718 6.08473 9.87314 5.62749 11.1706 5.62749C12.468 5.62749 13.574 6.08473 14.4885 6.9992C15.4029 7.91366 15.8602 9.01962 15.8602 10.3171C15.8602 11.6145 15.4029 12.7205 14.4885 13.635C13.574 14.5494 12.468 15.0067 11.1706 15.0067ZM1.79143 11.255C1.52569 11.255 1.30293 11.1651 1.12317 10.9853C0.943399 10.8056 0.853516 10.5828 0.853516 10.3171C0.853516 10.0513 0.943399 9.82858 1.12317 9.64881C1.30293 9.46904 1.52569 9.37916 1.79143 9.37916H3.66726C3.93301 9.37916 4.15576 9.46904 4.33553 9.64881C4.5153 9.82858 4.60518 10.0513 4.60518 10.3171C4.60518 10.5828 4.5153 10.8056 4.33553 10.9853C4.15576 11.1651 3.93301 11.255 3.66726 11.255H1.79143ZM18.6739 11.255C18.4082 11.255 18.1854 11.1651 18.0056 10.9853C17.8259 10.8056 17.736 10.5828 17.736 10.3171C17.736 10.0513 17.8259 9.82858 18.0056 9.64881C18.1854 9.46904 18.4082 9.37916 18.6739 9.37916H20.5497C20.8155 9.37916 21.0382 9.46904 21.218 9.64881C21.3978 9.82858 21.4877 10.0513 21.4877 10.3171C21.4877 10.5828 21.3978 10.8056 21.218 10.9853C21.0382 11.1651 20.8155 11.255 20.5497 11.255H18.6739ZM11.1706 3.75166C10.9048 3.75166 10.6821 3.66178 10.5023 3.48201C10.3226 3.30225 10.2327 3.07949 10.2327 2.81375V0.937916C10.2327 0.672173 10.3226 0.449418 10.5023 0.269651C10.6821 0.0898836 10.9048 0 11.1706 0C11.4363 0 11.6591 0.0898836 11.8389 0.269651C12.0186 0.449418 12.1085 0.672173 12.1085 0.937916V2.81375C12.1085 3.07949 12.0186 3.30225 11.8389 3.48201C11.6591 3.66178 11.4363 3.75166 11.1706 3.75166ZM11.1706 20.6341C10.9048 20.6341 10.6821 20.5443 10.5023 20.3645C10.3226 20.1847 10.2327 19.962 10.2327 19.6962V17.8204C10.2327 17.5547 10.3226 17.3319 10.5023 17.1521C10.6821 16.9724 10.9048 16.8825 11.1706 16.8825C11.4363 16.8825 11.6591 16.9724 11.8389 17.1521C12.0186 17.3319 12.1085 17.5547 12.1085 17.8204V19.6962C12.1085 19.962 12.0186 20.1847 11.8389 20.3645C11.6591 20.5443 11.4363 20.6341 11.1706 20.6341ZM5.21482 5.67439L4.20656 4.68958C4.01898 4.51763 3.9291 4.29878 3.93691 4.03304C3.94473 3.7673 4.03461 3.54063 4.20656 3.35305C4.39415 3.16547 4.62081 3.07167 4.88655 3.07167C5.1523 3.07167 5.37114 3.16547 5.54309 3.35305L6.52791 4.36131C6.69986 4.54889 6.78583 4.76774 6.78583 5.01785C6.78583 5.26796 6.69986 5.48681 6.52791 5.67439C6.35595 5.86197 6.14102 5.95186 5.88309 5.94404C5.62516 5.93622 5.40241 5.84634 5.21482 5.67439ZM16.7981 17.2811L15.8133 16.2728C15.6413 16.0853 15.5553 15.8625 15.5553 15.6046C15.5553 15.3466 15.6413 15.1317 15.8133 14.9598C15.9852 14.7722 16.2002 14.6823 16.4581 14.6901C16.716 14.6979 16.9388 14.7878 17.1264 14.9598L18.1346 15.9446C18.3222 16.1165 18.4121 16.3354 18.4043 16.6011C18.3964 16.8669 18.3066 17.0935 18.1346 17.2811C17.947 17.4687 17.7204 17.5625 17.4546 17.5625C17.1889 17.5625 16.97 17.4687 16.7981 17.2811ZM15.8133 5.67439C15.6257 5.50244 15.5358 5.2875 15.5436 5.02957C15.5514 4.77165 15.6413 4.54889 15.8133 4.36131L16.7981 3.35305C16.97 3.16547 17.1889 3.07558 17.4546 3.0834C17.7204 3.09121 17.947 3.1811 18.1346 3.35305C18.3222 3.54063 18.416 3.7673 18.416 4.03304C18.416 4.29878 18.3222 4.51763 18.1346 4.68958L17.1264 5.67439C16.9388 5.84634 16.7199 5.93232 16.4698 5.93232C16.2197 5.93232 16.0009 5.84634 15.8133 5.67439ZM4.20656 17.2811C4.01898 17.0935 3.92519 16.8669 3.92519 16.6011C3.92519 16.3354 4.01898 16.1165 4.20656 15.9446L5.21482 14.9598C5.40241 14.7878 5.62516 14.7018 5.88309 14.7018C6.14102 14.7018 6.35595 14.7878 6.52791 14.9598C6.71549 15.1317 6.80537 15.3466 6.79756 15.6046C6.78974 15.8625 6.69986 16.0853 6.52791 16.2728L5.54309 17.2811C5.37114 17.4687 5.1523 17.5586 4.88655 17.5507C4.62081 17.5429 4.39415 17.4531 4.20656 17.2811Z\"\n            fill=\"#424142\"\n          />\n        </svg>\n        <svg\n          width=\"21\"\n          height=\"21\"\n          viewBox=\"0 0 21 21\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          id=\"cool\"\n          class=\"modeOption\"\n        >\n          <path\n            d=\"M9.40744 20.6341V16.3526L6.05439 19.654L4.61 18.2096L9.40744 13.4122V11.3488H7.34402L2.54658 16.1462L1.10219 14.7018L4.40366 11.3488H0.12207V9.28537H4.40366L1.10219 5.93232L2.54658 4.48793L7.34402 9.28537H9.40744V7.22195L4.61 2.42451L6.05439 0.980122L9.40744 4.28159V0H11.4708V4.28159L14.8239 0.980122L16.2683 2.42451L11.4708 7.22195V9.28537H13.5343L18.3317 4.48793L19.7761 5.93232L16.4746 9.28537H20.7562V11.3488H16.4746L19.7761 14.7018L18.3317 16.1462L13.5343 11.3488H11.4708V13.4122L16.2683 18.2096L14.8239 19.654L11.4708 16.3526V20.6341H9.40744Z\"\n            fill=\"#424142\"\n          />\n        </svg>\n        <svg\n          width=\"19\"\n          height=\"21\"\n          viewBox=\"0 0 19 21\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          id=\"dry\"\n          class=\"modeOption\"\n        >\n          <path\n            d=\"M7.36738 19.0973C5.40697 18.8454 3.75391 17.9719 2.40821 16.4771C1.0625 14.9822 0.389648 13.2186 0.389648 11.1863C0.389648 10.0777 0.593166 9.04896 1.0002 8.09997C1.40723 7.15099 1.98456 6.31538 2.73217 5.59314L8.3642 0L13.9962 5.59314C14.5943 6.1978 15.0886 6.87805 15.479 7.63388C15.8694 8.38971 16.1311 9.20432 16.264 10.0777H14.2454C14.1291 9.50666 13.9339 8.96498 13.6598 8.45269C13.3857 7.94041 13.0326 7.47431 12.6007 7.05441L8.3642 2.82176L4.12772 7.05441C3.54624 7.60868 3.11013 8.23434 2.81939 8.93139C2.52866 9.62843 2.38329 10.3801 2.38329 11.1863C2.38329 12.6475 2.86093 13.9325 3.81621 15.041C4.7715 16.1496 5.95522 16.8214 7.36738 17.0566V19.0973ZM9.66006 14.2852L9.06197 12.8995C9.49393 12.6643 9.94665 12.4712 10.4201 12.32C10.8936 12.1689 11.3713 12.0933 11.8531 12.0933C12.2352 12.0933 12.6131 12.1395 12.9869 12.2318C13.3608 12.3242 13.7221 12.4376 14.071 12.572C14.37 12.7063 14.6732 12.8239 14.9806 12.9247C15.2879 13.0255 15.6077 13.0759 15.94 13.0759C16.3221 13.0759 16.6959 13.0087 17.0614 12.8743C17.4269 12.7399 17.7841 12.5804 18.133 12.3956L18.7311 13.7813C18.2992 14.0164 17.8464 14.2096 17.3729 14.3608C16.8995 14.5119 16.4218 14.5875 15.94 14.5875C15.5579 14.5875 15.1799 14.5413 14.8061 14.4489C14.4323 14.3566 14.071 14.2432 13.7221 14.1088C13.4231 13.9744 13.1199 13.8569 12.8125 13.7561C12.5051 13.6553 12.1853 13.6049 11.8531 13.6049C11.4709 13.6049 11.0971 13.6721 10.7316 13.8065C10.3661 13.9409 10.0089 14.1004 9.66006 14.2852ZM9.66006 17.3085L9.06197 15.9228C9.49393 15.6877 9.94665 15.4945 10.4201 15.3433C10.8936 15.1922 11.3713 15.1166 11.8531 15.1166C12.2352 15.1166 12.6131 15.1628 12.9869 15.2552C13.3608 15.3475 13.7221 15.4609 14.071 15.5953C14.37 15.7297 14.6732 15.8472 14.9806 15.948C15.2879 16.0488 15.6077 16.0992 15.94 16.0992C16.3221 16.0992 16.6959 16.032 17.0614 15.8976C17.4269 15.7632 17.7841 15.6037 18.133 15.4189L18.7311 16.8046C18.2992 17.0398 17.8464 17.2329 17.3729 17.3841C16.8995 17.5352 16.4218 17.6108 15.94 17.6108C15.5579 17.6108 15.1799 17.5646 14.8061 17.4723C14.4323 17.3799 14.071 17.2665 13.7221 17.1321C13.4231 16.9978 13.1199 16.8802 12.8125 16.7794C12.5051 16.6786 12.1853 16.6283 11.8531 16.6283C11.4709 16.6283 11.0971 16.6954 10.7316 16.8298C10.3661 16.9642 10.0089 17.1237 9.66006 17.3085ZM9.66006 20.3318L9.06197 18.9461C9.49393 18.711 9.94665 18.5178 10.4201 18.3667C10.8936 18.2155 11.3713 18.1399 11.8531 18.1399C12.2352 18.1399 12.6131 18.1861 12.9869 18.2785C13.3608 18.3709 13.7221 18.4842 14.071 18.6186C14.37 18.753 14.6732 18.8705 14.9806 18.9713C15.2879 19.0721 15.6077 19.1225 15.94 19.1225C16.3221 19.1225 16.6959 19.0553 17.0614 18.9209C17.4269 18.7866 17.7841 18.627 18.133 18.4422L18.7311 19.8279C18.2992 20.0631 17.8464 20.2562 17.3729 20.4074C16.8995 20.5586 16.4218 20.6341 15.94 20.6341C15.5579 20.6341 15.1799 20.588 14.8061 20.4956C14.4323 20.4032 14.071 20.2898 13.7221 20.1555C13.4231 20.0211 13.1199 19.9035 12.8125 19.8027C12.5051 19.702 12.1853 19.6516 11.8531 19.6516C11.4709 19.6516 11.0971 19.7188 10.7316 19.8531C10.3661 19.9875 10.0089 20.1471 9.66006 20.3318Z\"\n            fill=\"#424142\"\n          />\n        </svg>\n        <svg\n          width=\"21\"\n          height=\"21\"\n          viewBox=\"0 0 21 21\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          id=\"fan\"\n          class=\"modeOption\"\n        >\n          <path\n            d=\"M9.03 21C8.1375 21 7.45937 20.7331 6.99562 20.1994C6.53187 19.6656 6.3 19.0575 6.3 18.375C6.3 17.92 6.40062 17.4781 6.60187 17.0494C6.80312 16.6206 7.11375 16.2663 7.53375 15.9862C7.91875 15.7413 8.22937 15.4262 8.46562 15.0412C8.70187 14.6562 8.86375 14.245 8.95125 13.8075L8.63625 13.65C8.53125 13.5975 8.435 13.5362 8.3475 13.4662L5.9325 14.3325C5.635 14.4375 5.34625 14.525 5.06625 14.595C4.78625 14.665 4.4975 14.7 4.2 14.7C3.0975 14.7 2.12187 14.2187 1.27312 13.2562C0.424375 12.2937 0 10.885 0 9.03C0 8.1375 0.266875 7.45937 0.800625 6.99562C1.33438 6.53187 1.93375 6.3 2.59875 6.3C3.05375 6.3 3.5 6.40062 3.9375 6.60187C4.375 6.80312 4.73375 7.11375 5.01375 7.53375C5.25875 7.91875 5.57375 8.22937 5.95875 8.46562C6.34375 8.70187 6.755 8.86375 7.1925 8.95125L7.35 8.63625C7.4025 8.53125 7.46375 8.435 7.53375 8.3475L6.6675 5.9325C6.5625 5.635 6.475 5.34625 6.405 5.06625C6.335 4.78625 6.3 4.50625 6.3 4.22625C6.3 3.10625 6.78125 2.12187 7.74375 1.27312C8.70625 0.424375 10.115 0 11.97 0C12.8625 0 13.5406 0.266875 14.0044 0.800625C14.4681 1.33438 14.7 1.93375 14.7 2.59875C14.7 3.05375 14.5994 3.5 14.3981 3.9375C14.1969 4.375 13.8862 4.73375 13.4662 5.01375C13.0812 5.25875 12.7706 5.57375 12.5344 5.95875C12.2981 6.34375 12.1362 6.755 12.0487 7.1925L12.3638 7.35C12.4688 7.4025 12.565 7.46375 12.6525 7.53375L15.0675 6.64125C15.365 6.53625 15.6494 6.45312 15.9206 6.39187C16.1919 6.33062 16.4762 6.3 16.7738 6.3C18.1912 6.3 19.25 6.88625 19.95 8.05875C20.65 9.23125 21 10.535 21 11.97C21 12.8625 20.72 13.5406 20.16 14.0044C19.6 14.4681 18.9788 14.7 18.2963 14.7C17.8588 14.7 17.4344 14.5994 17.0231 14.3981C16.6119 14.1969 16.2663 13.8862 15.9862 13.4662C15.7413 13.0812 15.4262 12.7706 15.0412 12.5344C14.6562 12.2981 14.245 12.1362 13.8075 12.0487L13.65 12.3638C13.5975 12.4688 13.5362 12.565 13.4662 12.6525L14.3325 15.0675C14.4375 15.3475 14.525 15.6144 14.595 15.8681C14.665 16.1219 14.7 16.3888 14.7 16.6687C14.7175 17.8062 14.245 18.8125 13.2825 19.6875C12.32 20.5625 10.9025 21 9.03 21ZM10.5 12.075C10.9375 12.075 11.3094 11.9219 11.6156 11.6156C11.9219 11.3094 12.075 10.9375 12.075 10.5C12.075 10.0625 11.9219 9.69062 11.6156 9.38437C11.3094 9.07812 10.9375 8.925 10.5 8.925C10.0625 8.925 9.69062 9.07812 9.38437 9.38437C9.07812 9.69062 8.925 10.0625 8.925 10.5C8.925 10.9375 9.07812 11.3094 9.38437 11.6156C9.69062 11.9219 10.0625 12.075 10.5 12.075ZM9.2925 7.035C9.3975 7 9.50688 6.96937 9.62062 6.94312C9.73438 6.91687 9.84375 6.895 9.94875 6.8775C10.0887 6.1425 10.3556 5.46 10.7494 4.83C11.1431 4.2 11.6637 3.675 12.3112 3.255C12.3988 3.185 12.4688 3.0975 12.5212 2.9925C12.5737 2.8875 12.6 2.75625 12.6 2.59875C12.6 2.45875 12.5475 2.34063 12.4425 2.24437C12.3375 2.14812 12.18 2.1 11.97 2.1C11.305 2.1 10.5525 2.24437 9.7125 2.53312C8.8725 2.82188 8.435 3.38625 8.4 4.22625C8.4 4.38375 8.42188 4.5325 8.46562 4.6725C8.50937 4.8125 8.54875 4.94375 8.58375 5.06625L9.2925 7.035ZM4.2 12.6C4.445 12.6 4.73375 12.5387 5.06625 12.4162L7.035 11.7075C7 11.6025 6.96937 11.4931 6.94312 11.3794C6.91687 11.2656 6.895 11.1562 6.8775 11.0513C6.1425 10.9113 5.46 10.6444 4.83 10.2506C4.2 9.85687 3.675 9.33625 3.255 8.68875C3.185 8.60125 3.09312 8.53125 2.97937 8.47875C2.86562 8.42625 2.73875 8.4 2.59875 8.4C2.44125 8.4 2.31875 8.4525 2.23125 8.5575C2.14375 8.6625 2.1 8.82 2.1 9.03C2.1 9.975 2.27937 10.8062 2.63812 11.5238C2.99687 12.2413 3.5175 12.6 4.2 12.6ZM9.03 18.9C9.8525 18.9 10.6619 18.7337 11.4581 18.4012C12.2544 18.0687 12.635 17.4912 12.6 16.6687C12.6 16.5287 12.5781 16.3975 12.5344 16.275C12.4906 16.1525 12.4512 16.0387 12.4162 15.9337L11.7075 13.965C11.6025 14 11.4931 14.0306 11.3794 14.0569C11.2656 14.0831 11.1562 14.105 11.0513 14.1225C10.9113 14.8575 10.6444 15.54 10.2506 16.17C9.85687 16.8 9.33625 17.325 8.68875 17.745C8.60125 17.815 8.52687 17.9069 8.46562 18.0206C8.40438 18.1344 8.3825 18.2525 8.4 18.375C8.4175 18.515 8.47 18.6375 8.5575 18.7425C8.645 18.8475 8.8025 18.9 9.03 18.9ZM18.2963 12.6C18.4538 12.6 18.5938 12.5562 18.7162 12.4687C18.8388 12.3812 18.9 12.215 18.9 11.97C18.9 11.305 18.76 10.5481 18.48 9.69938C18.2 8.85063 17.6313 8.4175 16.7738 8.4C16.6162 8.4 16.4675 8.4175 16.3275 8.4525C16.1875 8.4875 16.0562 8.5225 15.9337 8.5575L13.965 9.2925C14 9.3975 14.0306 9.50688 14.0569 9.62062C14.0831 9.73438 14.105 9.84375 14.1225 9.94875C14.8575 10.0887 15.54 10.3556 16.17 10.7494C16.8 11.1431 17.325 11.6637 17.745 12.3112C17.7975 12.3988 17.8762 12.4688 17.9812 12.5212C18.0862 12.5737 18.1912 12.6 18.2963 12.6Z\"\n            fill=\"#424142\"\n          />\n        </svg>\n      </div>\n      <div id=\"programs\">\n        <svg\n          width=\"22\"\n          height=\"18\"\n          viewBox=\"0 0 22 18\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          id=\"comfort\"\n          class=\"programOption\"\n        >\n          <path\n            fill-rule=\"evenodd\"\n            clip-rule=\"evenodd\"\n            d=\"M2.43884 10.6024L0.853516 7.61004L2.01235 7.0632L2.60797 8.18746C4.66956 2.8867 8.1136 0 11.7979 0C15.7986 0 19.516 3.4039 21.4877 9.60649L20.2467 9.95785C18.3315 3.93273 14.923 1.22277 11.7979 1.22277C8.92255 1.22277 5.80746 3.51672 3.83614 8.57596L5.03007 8.01256L5.60949 9.10623L2.43884 10.6024Z\"\n            fill=\"#424142\"\n          />\n          <path\n            fill-rule=\"evenodd\"\n            clip-rule=\"evenodd\"\n            d=\"M13.0979 10.0213C13.6423 9.84676 14.1284 9.5552 14.5551 9.14663C15.3001 8.43334 15.6726 7.56721 15.6726 6.54824C15.6726 5.50888 15.3001 4.63766 14.5551 3.93457C13.8101 3.23147 12.887 2.87993 11.7857 2.87993C10.7061 2.87993 9.78833 3.23147 9.03255 3.93457C8.27678 4.63766 7.89889 5.50888 7.89889 6.54824C7.89889 7.56721 8.27678 8.43334 9.03255 9.14663C9.46929 9.55881 9.95922 9.8519 10.5034 10.0259L10.5067 11.2276H6.61591V12.4504H5.3203V16.1187H6.61591V13.6732H7.91153V12.4504H9.20714V17.3415H14.3896V12.4504H15.6852V13.6732H16.9808V16.1187H18.2765V12.4504H16.9808V11.2276H13.0979V10.0213Z\"\n            fill=\"#424142\"\n          />\n        </svg>\n        <svg\n          width=\"21\"\n          height=\"18\"\n          viewBox=\"0 0 21 18\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          id=\"sensor\"\n          class=\"programOption\"\n        >\n          <path\n            d=\"M17.7136 14.6732L16.6985 13.6171C17.4821 12.802 18.0965 11.8602 18.5417 10.7918C18.9869 9.72345 19.2095 8.5717 19.2095 7.33659C19.2095 6.10147 18.9869 4.94973 18.5417 3.88135C18.0965 2.81298 17.4821 1.8712 16.6985 1.05602L17.7136 0C18.6159 0.938688 19.3282 2.03485 19.8506 3.2885C20.373 4.54214 20.6341 5.8915 20.6341 7.33659C20.6341 8.78167 20.373 10.131 19.8506 11.3847C19.3282 12.6383 18.6159 13.7345 17.7136 14.6732ZM15.7012 12.5797L14.6862 11.5236C15.2085 10.9802 15.6181 10.3503 15.9149 9.6339C16.2117 8.91753 16.3601 8.15176 16.3601 7.33659C16.3601 6.52141 16.2117 5.75564 15.9149 5.03927C15.6181 4.3229 15.2085 3.693 14.6862 3.14954L15.7012 2.09352C16.3423 2.76048 16.8499 3.54478 17.2239 4.44642C17.5978 5.34805 17.7848 6.31144 17.7848 7.33659C17.7848 8.36173 17.5978 9.32512 17.2239 10.2268C16.8499 11.1284 16.3423 11.9127 15.7012 12.5797ZM13.6889 10.4861L12.6738 9.43011C12.935 9.15838 13.1398 8.84343 13.2882 8.48524C13.4366 8.12706 13.5108 7.74417 13.5108 7.33659ƒC13.5108 6.929 13.4366 6.54611 13.2882 6.18793C13.1398 5.82974 12.935 5.51479 12.6738 5.24306L13.6889 4.18704C14.0688 4.58228 14.3715 5.05162 14.5971 5.59507C14.8227 6.13852 14.9355 6.71903 14.9355 7.33659C14.9355 7.95414 14.8227 8.53465 14.5971 9.0781C14.3715 9.62155 14.0688 10.0909 13.6889 10.4861Z\"\n            fill=\"#424142\"\n          />\n          <path\n            fill-rule=\"evenodd\"\n            clip-rule=\"evenodd\"\n            d=\"M7.96121 9.81548C8.5263 9.64164 9.03032 9.34813 9.47221 8.93496C10.2351 8.22168 10.6165 7.35556 10.6165 6.33659C10.6165 5.29724 10.2351 4.42602 9.47221 3.72293C8.70935 3.01984 7.76406 2.66829 6.63635 2.66829C5.53075 2.66829 4.59099 3.01984 3.81707 3.72293C3.04314 4.42602 2.65618 5.29724 2.65618 6.33659C2.65618 7.35556 3.04314 8.22168 3.81707 8.93496C4.25992 9.34312 4.75619 9.63449 5.30689 9.80909L5.31092 11.2276H1.32672V12.4504H0V16.1187H1.32672V13.6732H2.65344V12.4504H3.98016V17.3415H9.28705V12.4504H10.6138V13.6732H11.9405V16.1187H13.2672V12.4504H11.9405V11.2276H7.96436V9.81502L7.96121 9.81548Z\"\n            fill=\"#424142\"\n          />\n        </svg>\n        <svg\n          width=\"26\"\n          height=\"17\"\n          viewBox=\"0 0 26 17\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          id=\"quiet\"\n          class=\"programOption\"\n        >\n          <path\n            d=\"M14.2045 8.15989C14.7757 8.15989 15.2516 7.95939 15.6324 7.55837C16.0132 7.15735 16.2783 6.68073 16.4279 6.12851L15.2448 5.8524C15.1768 6.14166 15.0578 6.40134 14.8879 6.63143C14.7179 6.86152 14.4901 6.97656 14.2045 6.97656C13.9189 6.97656 13.6912 6.86152 13.5212 6.63143C13.3512 6.40134 13.2322 6.14166 13.1642 5.8524L11.9811 6.12851C12.1307 6.68073 12.3959 7.15735 12.7767 7.55837C13.1574 7.95939 13.6334 8.15989 14.2045 8.15989ZM19.916 8.15989C20.4871 8.15989 20.9631 7.95939 21.3439 7.55837C21.7246 7.15735 21.9898 6.68073 22.1394 6.12851L20.9563 5.8524C20.8883 6.14166 20.7693 6.40134 20.5993 6.63143C20.4293 6.86152 20.2016 6.97656 19.916 6.97656C19.6304 6.97656 19.4026 6.86152 19.2327 6.63143C19.0627 6.40134 18.9437 6.14166 18.8757 5.8524L17.6926 6.12851C17.8422 6.68073 18.1074 7.15735 18.4881 7.55837C18.8689 7.95939 19.3448 8.15989 19.916 8.15989ZM17.0603 16.0487C15.9316 16.0487 14.8709 15.8417 13.8781 15.4275C12.8854 15.0133 12.0219 14.4513 11.2876 13.7413C10.5533 13.0313 9.97191 12.1964 9.54355 11.2365C9.11518 10.2767 8.901 9.25118 8.901 8.15989C8.901 7.0686 9.11518 6.04305 9.54355 5.08324C9.97191 4.12343 10.5533 3.28853 11.2876 2.57853C12.0219 1.86853 12.8854 1.30645 13.8781 0.892287C14.8709 0.478122 15.9316 0.271039 17.0603 0.271039C18.189 0.271039 19.2497 0.478122 20.2424 0.892287C21.2351 1.30645 22.0986 1.86853 22.8329 2.57853C23.5673 3.28853 24.1486 4.12343 24.577 5.08324C25.0053 6.04305 25.2195 7.0686 25.2195 8.15989C25.2195 9.25118 25.0053 10.2767 24.577 11.2365C24.1486 12.1964 23.5673 13.0313 22.8329 13.7413C22.0986 14.4513 21.2351 15.0133 20.2424 15.4275C19.2497 15.8417 18.189 16.0487 17.0603 16.0487ZM17.0603 14.471C18.8825 14.471 20.4259 13.8596 21.6906 12.6368C22.9553 11.414 23.5877 9.92174 23.5877 8.15989C23.5877 6.39805 22.9553 4.90574 21.6906 3.68297C20.4259 2.4602 18.8825 1.84881 17.0603 1.84881C15.238 1.84881 13.6946 2.4602 12.4299 3.68297C11.1652 4.90574 10.5329 6.39805 10.5329 8.15989C10.5329 9.92174 11.1652 11.414 12.4299 12.6368C13.6946 13.8596 15.238 14.471 17.0603 14.471Z\"\n            fill=\"#424142\"\n          />\n          <path\n            fill-rule=\"evenodd\"\n            clip-rule=\"evenodd\"\n            d=\"M8.92788 0L12.3925 3.3498L11.3435 4.36403L8.87412 1.97648L4.4505 5.8258V14.6144H14.835H25.2195V16.0488H0V14.6144H2.967V7.11671L1.97971 7.97583L0.987296 6.90969L8.92788 0Z\"\n            fill=\"#424142\"\n          />\n        </svg>\n        <svg\n          width=\"21\"\n          height=\"17\"\n          viewBox=\"0 0 21 17\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          id=\"econo\"\n          class=\"programOption\"\n        >\n          <path\n            fill-rule=\"evenodd\"\n            clip-rule=\"evenodd\"\n            d=\"M0 1.47451V0H8.46322V1.47451H5.26062L12.0312 11.0589H16.4303L13.9056 8.67621L14.7391 7.54345L19.2454 11.7961L14.7391 16.0488L13.9056 14.916L16.4303 12.5334H11.4054L3.59321 1.47451H0ZM20.6341 1.47451H16.7038V0H20.6341V1.47451Z\"\n            fill=\"#424142\"\n          />\n          <path\n            d=\"M15.7213 1.47451H11.7909V0H15.7213V1.47451Z\"\n            fill=\"#424142\"\n          />\n        </svg>\n        <svg\n          width=\"22\"\n          height=\"16\"\n          viewBox=\"0 0 22 16\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          id=\"powerful\"\n          class=\"programOption\"\n        >\n          <path\n            d=\"M8.48046 4.73021C7.9216 4.18924 7.64218 3.53611 7.64218 2.77083C7.64218 2.00556 7.9216 1.35243 8.48046 0.811458C9.03931 0.270486 9.71402 0 10.5046 0C11.2952 0 11.9699 0.270486 12.5287 0.811458C13.0876 1.35243 13.367 2.00556 13.367 2.77083C13.367 3.53611 13.0876 4.18924 12.5287 4.73021C12.1429 5.10369 11.7019 5.34825 11.2056 5.46388L11.2056 6.66667H19.6279V4H18.2259V2.66667H16.824V0H19.6279V2.66667H21.0299V8H14.02L11.216 16H9.81397L7.01001 8H3.24652e-05L0 2.66667H1.402L1.40192 0H4.20599V2.66667H2.80399V4H1.402L1.40192 6.66667H9.80359L9.80359 5.46388C9.30732 5.34824 8.86628 5.10369 8.48046 4.73021Z\"\n            fill=\"#424142\"\n          />\n        </svg>\n      </div>\n      <div id=\"swing\">\n        <svg\n          id=\"verticalSwing\"\n          class=\"swingOption\"\n          width=\"13\"\n          height=\"20\"\n          viewBox=\"0 0 13 20\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M3.32821 1.9608L1.40626 1.9608L1.40626 0.524219L6.15768 0.524219L6.15768 5.37117L4.74976 5.37117L4.74976 2.55794V2.52428L4.72779 2.54978C3.80339 3.62272 3.09413 4.81762 2.60005 6.13443C2.10595 7.45129 1.8589 8.82504 1.8589 10.2556C1.8589 11.6862 2.10595 13.06 2.60005 14.3768C3.09413 15.6936 3.80339 16.8885 4.72779 17.9615L4.74976 17.987V17.9533L4.74976 15.1401L6.15768 15.1401L6.15768 19.987L1.40626 19.987L1.40626 18.5504L3.32821 18.5504H3.35429L3.33796 18.5301C2.39948 17.3619 1.68372 16.0721 1.19062 14.6606C0.697531 13.2491 0.450977 11.7808 0.450977 10.2556C0.450977 8.73045 0.697531 7.26214 1.19062 5.85063C1.68372 4.43911 2.39948 3.14929 3.33796 1.98113L3.35429 1.9608L3.32821 1.9608Z\"\n            fill=\"#424142\"\n            stroke=\"#424142\"\n            stroke-width=\"0.025\"\n          />\n          <path\n            d=\"M9.03613 4.40918L11.902 8.07747\"\n            stroke=\"#424142\"\n            stroke-width=\"1.2\"\n            stroke-linecap=\"round\"\n          />\n          <path\n            d=\"M7.125 6.24365L11.9014 8.99487\"\n            stroke=\"#424142\"\n            stroke-width=\"1.2\"\n            stroke-linecap=\"round\"\n          />\n          <path\n            d=\"M6.17041 8.99463L11.9021 9.9117\"\n            stroke=\"#424142\"\n            stroke-width=\"1.2\"\n            stroke-linecap=\"round\"\n          />\n          <path\n            d=\"M6.17041 11.7458L11.9021 10.8288\"\n            stroke=\"#424142\"\n            stroke-width=\"1.2\"\n            stroke-linecap=\"round\"\n          />\n          <path\n            d=\"M7.125 14.4971L11.9014 11.7459\"\n            stroke=\"#424142\"\n            stroke-width=\"1.2\"\n            stroke-linecap=\"round\"\n          />\n          <path\n            d=\"M9.03613 16.3313L11.902 12.663\"\n            stroke=\"#424142\"\n            stroke-width=\"1.2\"\n            stroke-linecap=\"round\"\n          />\n          <path\n            d=\"M11.9019 8.07764V12.663\"\n            stroke=\"#424142\"\n            stroke-width=\"1.2\"\n            stroke-linecap=\"round\"\n          />\n        </svg>\n        <svg\n          id=\"horizontalSwing\"\n          class=\"swingOption\"\n          width=\"21\"\n          height=\"13\"\n          viewBox=\"0 0 21 13\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M2.27819 9.67081L2.27819 11.5928L0.841602 11.5928L0.841601 6.84134L5.68855 6.84134L5.68855 8.24927L2.87532 8.24927L2.84166 8.24927L2.86716 8.27124C3.9401 9.19563 5.135 9.90489 6.45181 10.399C7.76867 10.8931 9.14242 11.1401 10.573 11.1401C12.0036 11.1401 13.3773 10.8931 14.6942 10.399C16.011 9.90489 17.2059 9.19563 18.2788 8.27124L18.3043 8.24927L18.2707 8.24927L15.4575 8.24927L15.4575 6.84134L20.3044 6.84134L20.3044 11.5928L18.8678 11.5928L18.8678 9.67081L18.8678 9.64473L18.8475 9.66107C17.6793 10.5995 16.3895 11.3153 14.978 11.8084C13.5665 12.3015 12.0982 12.548 10.573 12.548C9.04783 12.548 7.57952 12.3015 6.16801 11.8084C4.75649 11.3153 3.46668 10.5995 2.29852 9.66107L2.27819 9.64474L2.27819 9.67081Z\"\n            fill=\"#424142\"\n            stroke=\"#424142\"\n            stroke-width=\"0.025\"\n          />\n          <path\n            d=\"M4.72705 3.96338L8.39534 1.0976\"\n            stroke=\"#424142\"\n            stroke-width=\"1.2\"\n            stroke-linecap=\"round\"\n          />\n          <path\n            d=\"M6.56104 5.87354L9.31225 1.09723\"\n            stroke=\"#424142\"\n            stroke-width=\"1.2\"\n            stroke-linecap=\"round\"\n          />\n          <path\n            d=\"M9.31152 6.82886L10.2286 1.09701\"\n            stroke=\"#424142\"\n            stroke-width=\"1.2\"\n            stroke-linecap=\"round\"\n          />\n          <path\n            d=\"M12.062 6.82886L11.1449 1.09701\"\n            stroke=\"#424142\"\n            stroke-width=\"1.2\"\n            stroke-linecap=\"round\"\n          />\n          <path\n            d=\"M14.8149 5.87354L12.0637 1.09723\"\n            stroke=\"#424142\"\n            stroke-width=\"1.2\"\n            stroke-linecap=\"round\"\n          />\n          <path\n            d=\"M16.6484 3.96338L12.9801 1.0976\"\n            stroke=\"#424142\"\n            stroke-width=\"1.2\"\n            stroke-linecap=\"round\"\n          />\n          <path\n            d=\"M8.39453 1.09766L12.9799 1.09766\"\n            stroke=\"#424142\"\n            stroke-width=\"1.2\"\n            stroke-linecap=\"round\"\n          />\n        </svg>\n      </div>\n    </div>\n  </div>\n</div>\n<div id=\"dialog${tabId}\" class=\"confirmationDialog\">\n  <div class=\"dialogContent\">\n    <div class=\"dialogText\">\n      Are you sure you want to\n      <span style=\"color: #00aa6c\">Close</span> AC${tabId + 1}?\n    </div>\n    <div class=\"dialogButtons\">\n      <button id=\"yes\" class=\"dialogButton\">YES</button>\n      <button id=\"no\" class=\"dialogButton\">NO</button>\n    </div>\n  </div>\n</div>\n`;\n\n    return content;\n}\n\nconst selectTab = function(tabId) {\n    var tabContents = document\n        .getElementsByClassName(\n            \"tabContent\");\n    var tabs = document\n        .getElementsByClassName(\n            \"acButton\");\n    for (var i = 0; i < tabContents\n        .length; i++) {\n        if (i == tabId) {\n            tabContents[i].classList.add(\n                \"active\");\n            tabs[i].classList.add(\"selectedTab\");\n        } else {\n            tabContents[i].classList.remove(\n                \"active\");\n            tabs[i].classList.remove(\"selectedTab\");\n\n        }\n    }\n};\n\nself.onInit = function() {\n\n    // attributeService = self.ctx.attributeService;\n    // entityId = self.ctx.datasources[0].entity.id;\n    const $scope = ctx.$scope;\n    console.log(self.ctx);\n\n    var $http = self.ctx.http;\n\n\n    const numberOfAcs = self.ctx.datasources.length;\n    loadTabs(numberOfAcs);\n\n    for (let i = 0; i < numberOfAcs; i++) {\n        const obj = {\n            id: i,\n            name: 'AC' + (i + 1),\n            deviceId: null,\n            onOff: null,\n            fan: null,\n            mode: null,\n            verticalSwing: null,\n            horizontalSwing: null,\n            temperature: null,\n            econo: null,\n            comfort: null,\n            quiet: null,\n            powerful: null,\n            sensor: null,\n        };\n        acsArray.push(obj);\n    }\n\n    const allTabContents = document.querySelectorAll(\n        '.tabContent');\n\n    allTabContents.forEach((tabContent) => {\n        const modeOptions = tabContent\n            .querySelectorAll('.modeOption');\n        const programOptions = tabContent\n            .querySelectorAll('.programOption');\n        const swingOptions = tabContent\n            .querySelectorAll('.swingOption');\n\n        modeOptions.forEach((modeOption) => {\n            const id = modeOption.id;\n            modeOption.addEventListener(\n                'click', () =>\n                selectMode(id,\n                    tabContent.id));\n        })\n\n\n        programOptions.forEach((\n            programOption) => {\n            const id = programOption.id;\n            programOption\n                .addEventListener(\n                    'click', () =>\n                    selectProgram(\n                        id, tabContent\n                        .id)\n                );\n        })\n\n        swingOptions.forEach((swingOption) => {\n            const id = swingOption.id;\n            swingOption\n                .addEventListener(\n                    'click', () =>\n                    selectSwing(\n                        id, tabContent\n                        .id));\n        })\n\n        const incrementButton = tabContent\n            .querySelector('#increment');\n        incrementButton.addEventListener(\n            'click',\n            () => increment(tabContent.id));\n\n        const decrementButton = tabContent\n            .querySelector('#decrement');\n        decrementButton.addEventListener(\n            'click',\n            () => decrement(tabContent.id));\n\n        const fanControlContainer = tabContent\n            .querySelector(\n                '#fanControlContainer');\n        fanControlContainer.addEventListener(\n            'click', () => setFanSpeed(\n                tabContent.id))\n\n        const checkbox = tabContent\n            .querySelector('.checkbox');\n        checkbox.addEventListener('click', () =>\n            openDialog(tabContent.id));\n\n        var dialogId = parseInt(tabContent.id\n            .match(\n                /\\d+$/)[0]\n        );\n        const dialog = document.getElementById(\n            `dialog${dialogId}`);\n        const yesButton = dialog\n            .querySelector('#yes.dialogButton');\n        yesButton.addEventListener('click',\n            () =>\n            closeAc(tabContent.id));\n\n        const noButton = dialog\n            .querySelector('#no.dialogButton');\n        noButton.addEventListener('click',\n            () =>\n            closeDialog(tabContent.id));\n\n\n    });\n\n    function sendRPC(acNumber) {\n\n        var data = {\n            \"onOff\": acsArray[acNumber].onOff,\n            \"fan\": acsArray[acNumber].fan,\n            \"mode\": acsArray[acNumber].mode,\n            \"verticalSwing\": acsArray[acNumber]\n                .verticalSwing,\n            \"horizontalSwing\": acsArray[acNumber]\n                .horizontalSwing,\n            \"temperature\": acsArray[acNumber]\n                .temperature,\n            \"econo\": acsArray[acNumber].econo,\n            \"comfort\": acsArray[acNumber].comfort,\n            \"quiet\": acsArray[acNumber].quiet,\n            \"powerful\": acsArray[acNumber].powerful,\n            \"sensor\": acsArray[acNumber].sensor,\n        }\n\n        console.log(data);\n\n        $http.post('/api/rpc/twoway/' + acsArray[\n            acNumber].deviceId, {\n            \"method\": \"changeRemoteContext\",\n            \"params\": JSON.stringify(data),\n            \"persistent\": false,\n            \"timeout\": 5000\n        }).subscribe(\n            function(response) {\n                console.log('test');\n            })\n    }\n\n    function openDialog(containerId) {\n\n        const container = document.getElementById(\n            containerId);\n        var acSwitch = container.querySelector(\n            '.checkbox');\n        var dialogId = parseInt(containerId.match(\n            /\\d+$/)[0]);\n        var tabs = document.getElementById('tabs');\n        const\n            dialog =\n            document\n            .querySelector(\n                `#dialog${dialogId}`\n            );\n\n        if (\n            acSwitch.checked) {\n            // console.log(\n            //     'Switch is ON'\n            // );\n            acsArray[dialogId].onOff = 1;\n            sendRPC(dialogId);\n        } else {\n            // console.log(\n            //     'Switch is OFF'\n            // );\n            dialog.style\n                .display =\n                \"flex\";\n            dialog.style\n                .visibility =\n                \"visible\";\n            container.style.display = \"none\";\n            tabs.style.display = \"none\";\n        }\n    };\n\n    function closeDialog(containerId) {\n        var container = document.querySelector(\n            `div#${containerId}.tabContent.active`);\n        var id = parseInt(containerId.match(\n            /\\d+$/)[0]);\n        var tabs = document.getElementById('tabs');\n        const dialog =\n            document\n            .getElementById(`dialog${id}`);\n\n        dialog.style.display = \"none\";\n        container.style.display = \"\";\n        tabs.style.display = \"flex\";\n\n        const checkbox = container.querySelector(\n            `#checkbox${id}`);\n        checkbox.checked = true;\n\n        acsArray[id].onOff = 1;\n    }\n\n    function closeAc(containerId) {\n        var container = document.querySelector(\n            `#${containerId}.tabContent.active`);\n        var tabs = document.getElementById('tabs');\n        id = parseInt(containerId.match(\n            /\\d+$/)[0]);\n        const dialog =\n            document\n            .getElementById(`dialog${id}`);\n\n        dialog.style.display = \"none\";\n        container.style.display = \"\";\n        tabs.style.display = \"flex\";\n\n        const checkbox = container.querySelector(\n            `#checkbox${id}`);\n        checkbox.checked = false;\n\n        acsArray[id].onOff = 0;\n        sendRPC(id);\n    }\n\n    function increment(containerId) {\n        var acNumber = parseInt(containerId.charAt(\n            containerId.length - 1), 10)\n        var container = document.getElementById(\n            containerId);\n        var temp =\n            container\n            .querySelector(\n                \"#setTemp\"\n            );\n        const newValue =\n            parseInt(\n                temp\n                .textContent,\n                10) +\n            1;\n        // if (newValue <= 32) {\n        temp.textContent = newValue + '°';\n        acsArray[acNumber].temperature =\n            parseInt(\n                temp\n                .textContent,\n                10);\n        // }\n\n        sendRPC(acNumber);\n    };\n\n    function decrement(containerId) {\n        var acNumber = parseInt(containerId.charAt(\n            containerId.length - 1), 10)\n        var container = document.getElementById(\n            containerId);\n        var temp =\n            container\n            .querySelector(\n                \"#setTemp\"\n            );\n        const newValue =\n            parseInt(\n                temp\n                .textContent,\n                10) -\n            1;\n\n        // if (newValue >= 18) {\n        temp.textContent = newValue + '°';\n        acsArray[acNumber].temperature =\n            parseInt(\n                temp\n                .textContent,\n                10);\n        // }\n\n        sendRPC(acNumber);\n\n    };\n\n    function setFanSpeed(containerId) {\n        const autoIcon = `\n<ellipse cx=\"22.5\" cy=\"18.5\" rx=\"12.5\" ry=\"12.5\" fill=\"#D9D9D9\"/>\n<path d=\"M19.6217 21.3787L21.8148 15.622H23.1855L25.3785 21.3787H24.0764L23.5967 20.0995H21.4036L20.9239 21.3787H19.6217ZM21.712 19.2359H23.2883L22.5001 16.9012L21.712 19.2359Z\" fill=\"#858585\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M23.6133 10.808L25.5489 12.7436L23.6133 14.6792L23.0318 14.0976L23.9746 13.1548H18.3882C17.7069 13.1548 17.1546 13.7071 17.1546 14.3884H16.3322C16.3322 13.2529 17.2527 12.3324 18.3882 12.3324H23.9746L23.0318 11.3896L23.6133 10.808Z\" fill=\"#858585\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M30.1924 19.6135L28.2569 21.5491L26.3213 19.6135L26.9029 19.032L27.8457 19.9748L27.8457 14.3884C27.8457 13.7071 27.2934 13.1548 26.6121 13.1548V12.3324C27.7476 12.3324 28.6681 13.2529 28.6681 14.3884V19.9748L29.6109 19.032L30.1924 19.6135Z\" fill=\"#858585\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M21.387 26.1927L19.4514 24.2571L21.387 22.3215L21.9685 22.9031L21.0257 23.8459H26.6121C27.2934 23.8459 27.8457 23.2936 27.8457 22.6123H28.6681C28.6681 23.7478 27.7476 24.6683 26.6121 24.6683H21.0257L21.9685 25.6111L21.387 26.1927Z\" fill=\"#858585\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M14.8078 17.3872L16.7434 15.4516L18.6789 17.3872L18.0974 17.9687L17.1546 17.0259L17.1546 22.6123C17.1546 23.2936 17.7069 23.8459 18.3882 23.8459V24.6683C17.2527 24.6683 16.3322 23.7478 16.3322 22.6123L16.3322 17.0259L15.3894 17.9687L14.8078 17.3872Z\" fill=\"#858585\"/>\n`;\n        const nightIcon = `\n<ellipse cx=\"22.5\" cy=\"18.5\" rx=\"12.5\" ry=\"12.5\" fill=\"#D9D9D9\"/>\n<path d=\"M15.4977 16.3251C16.0727 16.8675 16.7628 17.1386 17.5678 17.1386C18.3729 17.1386 19.0629 16.8675 19.638 16.3251C20.213 15.7827 20.5005 15.1319 20.5005 14.3726C20.5005 13.6133 20.213 12.9624 19.638 12.4201C19.4884 12.279 19.3246 12.1516 19.1463 12.0377C18.968 11.9238 18.7811 11.8343 18.5856 11.7692C18.7811 12.279 18.8185 12.7997 18.6978 13.3312C18.577 13.8628 18.3154 14.3183 17.9128 14.698C17.5103 15.0777 17.0273 15.3244 16.4637 15.4383C15.9002 15.5522 15.3482 15.517 14.8076 15.3326C14.8766 15.517 14.9715 15.6932 15.0923 15.8614C15.213 16.0295 15.3482 16.1841 15.4977 16.3251Z\" fill=\"#858585\"/>\n<path d=\"M26.3009 25.2308H24.0772V22.0848H20.1859L23.5213 17.8903H21.2977L25.189 12.647L29.0804 17.8903H26.8568L30.1922 22.0848H26.3009V25.2308Z\" fill=\"#858585\"/>\n`;\n        const fanIcon = `<ellipse\n            id=\"Ellipse 3\"\n            cx=\"22.5\"\n            cy=\"18.5\"\n            rx=\"12.5\"\n            ry=\"12.5\"\n            fill=\"#00AA6C\"\n          />\n          <path\n            id=\"mode_fan\"\n            d=\"M21.557 25.2311C20.9849 25.2311 20.5502 25.06 20.2529 24.7178C19.9557 24.3757 19.807 23.9859 19.807 23.5484C19.807 23.2567 19.8715 22.9735 20.0005 22.6986C20.1295 22.4238 20.3287 22.1966 20.5979 22.0171C20.8447 21.8601 21.0438 21.6582 21.1952 21.4114C21.3467 21.1646 21.4504 20.9009 21.5065 20.6205L21.3046 20.5195C21.2373 20.4859 21.1756 20.4466 21.1195 20.4017L19.5714 20.957C19.3807 21.0243 19.1956 21.0804 19.0162 21.1253C18.8367 21.1702 18.6516 21.1926 18.4609 21.1926C17.7541 21.1926 17.1287 20.8841 16.5847 20.2671C16.0406 19.6501 15.7686 18.7471 15.7686 17.558C15.7686 16.9859 15.9396 16.5512 16.2818 16.2539C16.6239 15.9566 17.0081 15.808 17.4344 15.808C17.7261 15.808 18.0121 15.8725 18.2926 16.0015C18.573 16.1305 18.803 16.3296 18.9825 16.5989C19.1395 16.8457 19.3415 17.0448 19.5883 17.1962C19.8351 17.3477 20.0987 17.4514 20.3791 17.5075L20.4801 17.3056C20.5137 17.2383 20.553 17.1766 20.5979 17.1205L20.0426 15.5724C19.9753 15.3817 19.9192 15.1966 19.8743 15.0171C19.8295 14.8376 19.807 14.6582 19.807 14.4787C19.807 13.7607 20.1155 13.1297 20.7325 12.5856C21.3495 12.0416 22.2525 11.7695 23.4416 11.7695C24.0137 11.7695 24.4484 11.9406 24.7457 12.2828C25.043 12.6249 25.1916 13.0091 25.1916 13.4354C25.1916 13.7271 25.1271 14.0131 24.9981 14.2936C24.8691 14.574 24.67 14.804 24.4008 14.9835C24.154 15.1405 23.9549 15.3424 23.8034 15.5892C23.652 15.836 23.5482 16.0997 23.4921 16.3801L23.694 16.4811C23.7613 16.5147 23.823 16.554 23.8791 16.5989L25.4272 16.0267C25.6179 15.9594 25.8002 15.9061 25.9741 15.8669C26.148 15.8276 26.3303 15.808 26.521 15.808C27.4296 15.808 28.1083 16.1838 28.557 16.9354C29.0057 17.687 29.2301 18.5227 29.2301 19.4426C29.2301 20.0147 29.0506 20.4494 28.6916 20.7467C28.3327 21.044 27.9344 21.1926 27.4969 21.1926C27.2165 21.1926 26.9444 21.1281 26.6808 20.9991C26.4172 20.8701 26.1956 20.671 26.0162 20.4017C25.8591 20.1549 25.6572 19.9558 25.4104 19.8044C25.1636 19.6529 24.9 19.5492 24.6195 19.4931L24.5186 19.695C24.4849 19.7623 24.4456 19.824 24.4008 19.8801L24.9561 21.4282C25.0234 21.6077 25.0795 21.7787 25.1243 21.9414C25.1692 22.1041 25.1916 22.2751 25.1916 22.4546C25.2028 23.1838 24.9 23.8288 24.283 24.3897C23.666 24.9506 22.7573 25.2311 21.557 25.2311ZM22.4993 19.5099C22.7798 19.5099 23.0182 19.4118 23.2145 19.2154C23.4108 19.0191 23.5089 18.7807 23.5089 18.5003C23.5089 18.2199 23.4108 17.9815 23.2145 17.7852C23.0182 17.5888 22.7798 17.4907 22.4993 17.4907C22.2189 17.4907 21.9805 17.5888 21.7842 17.7852C21.5879 17.9815 21.4897 18.2199 21.4897 18.5003C21.4897 18.7807 21.5879 19.0191 21.7842 19.2154C21.9805 19.4118 22.2189 19.5099 22.4993 19.5099ZM21.7253 16.2791C21.7926 16.2567 21.8627 16.2371 21.9356 16.2203C22.0085 16.2034 22.0787 16.1894 22.146 16.1782C22.2357 15.707 22.4068 15.2695 22.6592 14.8657C22.9116 14.4618 23.2453 14.1253 23.6604 13.8561C23.7165 13.8112 23.7613 13.7551 23.795 13.6878C23.8287 13.6205 23.8455 13.5364 23.8455 13.4354C23.8455 13.3457 23.8118 13.2699 23.7445 13.2082C23.6772 13.1465 23.5762 13.1157 23.4416 13.1157C23.0153 13.1157 22.533 13.2082 21.9945 13.3933C21.4561 13.5784 21.1756 13.9402 21.1532 14.4787C21.1532 14.5796 21.1672 14.675 21.1952 14.7647C21.2233 14.8545 21.2485 14.9386 21.271 15.0171L21.7253 16.2791ZM18.4609 19.8465C18.6179 19.8465 18.803 19.8072 19.0162 19.7287L20.2782 19.2743C20.2557 19.207 20.2361 19.1369 20.2193 19.064C20.2024 18.9911 20.1884 18.921 20.1772 18.8537C19.7061 18.7639 19.2686 18.5928 18.8647 18.3404C18.4609 18.088 18.1243 17.7543 17.8551 17.3392C17.8102 17.2832 17.7513 17.2383 17.6784 17.2046C17.6055 17.171 17.5242 17.1541 17.4344 17.1541C17.3335 17.1541 17.2549 17.1878 17.1988 17.2551C17.1428 17.3224 17.1147 17.4234 17.1147 17.558C17.1147 18.1638 17.2297 18.6966 17.4597 19.1566C17.6896 19.6165 18.0234 19.8465 18.4609 19.8465ZM21.557 23.8849C22.0843 23.8849 22.6031 23.7783 23.1135 23.5652C23.6239 23.3521 23.8679 22.9819 23.8455 22.4546C23.8455 22.3649 23.8315 22.2807 23.8034 22.2022C23.7754 22.1237 23.7501 22.0508 23.7277 21.9835L23.2734 20.7215C23.2061 20.7439 23.1359 20.7635 23.063 20.7803C22.9901 20.7972 22.92 20.8112 22.8527 20.8224C22.7629 21.2936 22.5919 21.7311 22.3395 22.1349C22.0871 22.5388 21.7533 22.8753 21.3383 23.1445C21.2822 23.1894 21.2345 23.2483 21.1952 23.3212C21.156 23.3941 21.142 23.4699 21.1532 23.5484C21.1644 23.6381 21.198 23.7166 21.2541 23.784C21.3102 23.8513 21.4112 23.8849 21.557 23.8849ZM27.4969 19.8465C27.5979 19.8465 27.6876 19.8184 27.7662 19.7623C27.8447 19.7062 27.8839 19.5997 27.8839 19.4426C27.8839 19.0163 27.7942 18.5311 27.6147 17.9871C27.4352 17.443 27.0706 17.1654 26.521 17.1541C26.42 17.1541 26.3246 17.1654 26.2349 17.1878C26.1452 17.2102 26.061 17.2327 25.9825 17.2551L24.7205 17.7263C24.7429 17.7936 24.7625 17.8637 24.7794 17.9366C24.7962 18.0095 24.8102 18.0796 24.8214 18.1469C25.2926 18.2367 25.7301 18.4078 26.1339 18.6602C26.5378 18.9126 26.8743 19.2463 27.1436 19.6614C27.1772 19.7174 27.2277 19.7623 27.295 19.796C27.3623 19.8296 27.4296 19.8465 27.4969 19.8465Z\"\n            fill=\"#424142\"\n          />`;\n        var acNumber = parseInt(containerId.charAt(\n            containerId.length - 1), 10);\n        var container = document.getElementById(\n            containerId);\n        var bars = container.querySelectorAll(\".bar\");\n        var fanSpeedValue = container.querySelector(\n            \"#fanSpeedValue\");\n        var icon = container.querySelector(\"#fanMode\");\n\n        //-------------\n        var cycleValues = [0, 1, 2, 3, 4, 5, 6];\n        var currentSpeed = acsArray[acNumber].fan;\n        var currentIndex = cycleValues.indexOf(\n            currentSpeed);\n\n        currentIndex = (currentIndex + 1) % cycleValues\n            .length;\n        var nextSpeed = cycleValues[currentIndex];\n        currentSpeed = nextSpeed;\n        if (nextSpeed === 0 || nextSpeed === 6) {\n            bars.forEach((bar) => {\n                bar.style.visibility = \"hidden\";\n            });\n            if (nextSpeed ===\n                6) {\n                icon.innerHTML = nightIcon\n                fanSpeedValue.textContent = \"Night\";\n                fanSpeedValue.setAttribute(\n                    \"text-anchor\", \"middle\");\n            } else if (nextSpeed === 0) {\n\n                icon.innerHTML = autoIcon\n                fanSpeedValue.textContent = \"Auto\";\n                fanSpeedValue.setAttribute(\n                    \"text-anchor\", \"middle\");\n            }\n        } else {\n            icon.innerHTML = fanIcon\n            fanSpeedValue.textContent = currentSpeed;\n            fanSpeedValue.removeAttribute(\n            \"text-anchor\");\n            bars.forEach((bar, index) => {\n                bar.style.visibility = index <\n                    nextSpeed ? \"visible\" :\n                    \"hidden\";\n            });\n        }\n\n        acsArray[acNumber].fan = currentSpeed;\n        sendRPC(acNumber);\n    }\n\n\n    function selectMode(id, containerId) {\n        var acNumber = parseInt(containerId.charAt(\n            containerId.length - 1), 10)\n        var clickedSvg = document.querySelector('#' +\n            containerId + ' #' + id);\n        const paths = clickedSvg.querySelectorAll(\n            'path');\n\n        // const allSvgs = document.querySelectorAll('#' +\n        //     containerId + ' svg');\n        var container = document.getElementById(\n            `${containerId}`);\n        var modeOptions = container.querySelectorAll(\n            '.modeOption');\n\n        modeOptions.forEach(function(option) {\n            option.classList.remove('selected');\n            var paths = option.querySelectorAll(\n                \"path\");\n            paths.forEach(function(path) {\n                path.classList.remove(\n                    'selected');\n            })\n        });\n\n\n        clickedSvg.classList.add('selected');\n        const clickedPaths = clickedSvg\n            .querySelectorAll(\n                'path');\n        clickedPaths.forEach(path => {\n            path.classList.add('selected');\n        });\n\n        if (id === 'dry') {\n            acsArray[acNumber].mode = 0;\n        } else if (id === 'cool') {\n            acsArray[acNumber].mode = 1;\n        } else if (id === 'fan') {\n            acsArray[acNumber].mode = 2;\n        } else if (id === 'heat') {\n            acsArray[acNumber].mode = 3;\n        }\n\n        sendRPC(acNumber);\n\n    }\n\n\n\n    function selectProgram(id, containerId) {\n        var acNumber = parseInt(containerId.charAt(\n            containerId.length - 1), 10)\n        var clickedSvg = document.querySelector('#' +\n            containerId + ' #' + id);\n        const paths = clickedSvg.querySelectorAll(\n            'path');\n\n        paths.forEach(path => {\n            const isSelected = path.classList\n                .contains('selected');\n\n            if (isSelected) {\n                path.classList.remove(\n                    'selected');\n                acsArray[acNumber][id] = 0;\n\n            } else {\n                path.classList.add('selected');\n                acsArray[acNumber][id] = 1;\n            }\n        });\n        clickedSvg.classList.toggle('selected');\n\n        sendRPC(acNumber);\n\n    }\n\n\n    function selectSwing(id, containerId) {\n        var acNumber = parseInt(containerId.charAt(\n            containerId.length - 1), 10)\n        var clickedSvg = document.querySelector('#' +\n            containerId + ' #' + id);\n        const paths = clickedSvg.querySelectorAll(\n            'path');\n\n        paths.forEach(path => {\n            const isSelected = path.classList\n                .contains('selectedSwing');\n            if (isSelected) {\n                path.classList.remove(\n                    'selectedSwing');\n                acsArray[acNumber][id] = 0;\n            } else {\n                path.classList.add(\n                    'selectedSwing');\n                acsArray[acNumber][id] = 1;\n            }\n        });\n        clickedSvg.classList.toggle('selectedSwing');\n\n        sendRPC(acNumber);\n\n    }\n\n    self.onResize();\n}\n\n// function saveAttribute() {\n//     // var attributeKey = self.ctx.defaultSubscription\n//     //     .datasources[0].dataKeys[0].name\n//     console.log('acsAttributes', acsAttributes);\n\n//     // var errors = checkErrors();\n\n//     // if(errors.length > 0){\n//     //     self.ctx.showErrorToast(errors[0]);\n//     //     return;\n//     // }\n\n//     attributeService.saveEntityAttributes(entityId,\n//         'SERVER_SCOPE', acsAttributes).subscribe(() => {\n//         console.log('attribute saved');\n//         self.ctx.showSuccessToast(\"Values saved!\");\n//     }, () => {\n//         console.log('failed to save attribute');\n//         self.ctx.showErrorToast(\n//             \"Unable to save values!\");\n//     });\n// }\n\nself.onDataUpdated = function() {\n    const {\n        ctx\n    } = self;\n    const {\n        data\n    } = ctx.defaultSubscription;\n\n    // console.log(\"data\", data)\n\n    data.forEach(item => {\n        let acToUpdate = acsArray.find(ac => ac\n            .name === item.datasource.name);\n        if (acToUpdate && item.data[0][1] !==\n            undefined) {\n            const propertyName = item.dataKey\n                .name;\n            const newValue = item.data[0][1];\n\n            // Trigger an update to the UI only if there is a change\n            if (acToUpdate[propertyName] !==\n                newValue) {\n                acToUpdate[propertyName] =\n                    newValue;\n\n                // Get the unique device ID and save it to acToUpdate\n                const deviceId = item.datasource\n                    .entityId;\n                acToUpdate.deviceId = deviceId;\n\n                updateUI(acToUpdate.id,\n                    propertyName, newValue);\n            }\n        }\n    });\n\n    // console.log('acsArray', acsArray);\n}\n\nconst updateUI = function(id, propertyName, newValue) {\n    const tab = document.getElementById(`content${id}`);\n\n    if (tab) {\n        switch (propertyName) {\n            case 'HDC1080Temperature':\n                updateActualemperature(tab, newValue);\n                break;\n            case 'HDC1080Humidity':\n                updateActualHumidity(tab, newValue);\n                break;\n            case 'temperature':\n                updateSetTemperature(tab, newValue);\n                break;\n            case 'onOff':\n                updateOnOff(id, tab, newValue);\n                break;\n            case 'mode':\n                updateMode(tab, newValue);\n                break;\n            case 'comfort':\n            case 'econo':\n            case 'powerful':\n            case 'quiet':\n            case 'sensor':\n                updateProgram(propertyName, tab,\n                    newValue);\n                break;\n            case 'verticalSwing':\n            case 'horizontalSwing':\n                updateSwing(propertyName, tab,\n                    newValue);\n                break;\n            case 'fan':\n                updateFanSpeed(tab, newValue);\n                break;\n        }\n    }\n}\n\nconst updateSetTemperature = function(tab, newValue) {\n    const temperatureElement = tab.querySelector(\n        '#setTemp');\n    if (temperatureElement) {\n        temperatureElement.textContent = newValue + '°';\n    }\n}\n\nconst updateActualemperature = function(tab, newValue) {\n    const temperatureElement = tab.querySelector(\n        '#tempValue');\n    if (temperatureElement) {\n        temperatureElement.textContent = newValue + '°';\n    }\n}\n\nconst updateActualHumidity = function(tab, newValue) {\n    const humidityElement = tab.querySelector(\n        '#humidityValue');\n    if (humidityElement) {\n        humidityElement.textContent = newValue + '%';\n    }\n}\n\nconst updateOnOff = function(id, tab, newValue) {\n    const checkbox = tab.querySelector(\n        `#checkbox${id}`);\n    if (checkbox) {\n        if (newValue === 1) {\n            checkbox.checked = true;\n        } else {\n            checkbox.checked = false;\n        }\n    }\n}\n\nconst updateMode = function(tab, newValue) {\n    var modeOptions = tab.querySelectorAll(\n        '.modeOption');\n\n    //remove current selection\n    modeOptions.forEach(function(option) {\n        option.classList.remove('selected');\n        var paths = option.querySelectorAll(\n            \"path\");\n        paths.forEach(function(path) {\n            path.classList.remove(\n                'selected');\n        })\n    });\n\n    //select new mode\n    if (newValue === 1) {\n        var coolMode = tab.querySelector('#cool');\n        var paths = coolMode.querySelectorAll('path')\n        paths.forEach((path) => {\n            path.classList.add('selected');\n        });\n    } else if (newValue === 0) {\n        var dryMode = tab.querySelector('#dry');\n        var paths = dryMode.querySelectorAll('path');\n        paths.forEach((path) => {\n            path.classList.add('selected');\n        });\n    } else if (newValue === 2) {\n        var fanMode = tab.querySelector('#fan');\n        var paths = fanMode.querySelectorAll('path');\n        paths.forEach((path) => {\n            path.classList.add('selected');\n        });\n    } else if (newValue === 3) {\n        var heatMode = tab.querySelector('#heat');\n        var paths = heatMode.querySelectorAll('path');\n        paths.forEach((path) => {\n            path.classList.add('selected');\n        });\n    }\n}\n\nconst updateProgram = function(program, tab, newValue) {\n    var program = tab.querySelector(`#${program}`);\n    var paths = program.querySelectorAll('path');\n\n    if (newValue === 1) {\n        paths.forEach((path) => {\n            path.classList.add('selected');\n        });\n    } else {\n        paths.forEach((path) => {\n            path.classList.remove('selected');\n        });\n    }\n}\n\nconst updateSwing = function(swing, tab, newValue) {\n    var swing = tab.querySelector(`#${swing}`);\n    var paths = swing.querySelectorAll('path');\n\n    if (newValue === 1) {\n        paths.forEach((path) => {\n            path.classList.add('selectedSwing');\n        });\n    } else {\n        paths.forEach((path) => {\n            path.classList.remove(\n                'selectedSwing');\n        });\n    }\n}\n\nconst updateFanSpeed = function(tab, newValue) {\n    const autoIcon = `\n<ellipse cx=\"22.5\" cy=\"18.5\" rx=\"12.5\" ry=\"12.5\" fill=\"#D9D9D9\"/>\n<path d=\"M19.6217 21.3787L21.8148 15.622H23.1855L25.3785 21.3787H24.0764L23.5967 20.0995H21.4036L20.9239 21.3787H19.6217ZM21.712 19.2359H23.2883L22.5001 16.9012L21.712 19.2359Z\" fill=\"#858585\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M23.6133 10.808L25.5489 12.7436L23.6133 14.6792L23.0318 14.0976L23.9746 13.1548H18.3882C17.7069 13.1548 17.1546 13.7071 17.1546 14.3884H16.3322C16.3322 13.2529 17.2527 12.3324 18.3882 12.3324H23.9746L23.0318 11.3896L23.6133 10.808Z\" fill=\"#858585\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M30.1924 19.6135L28.2569 21.5491L26.3213 19.6135L26.9029 19.032L27.8457 19.9748L27.8457 14.3884C27.8457 13.7071 27.2934 13.1548 26.6121 13.1548V12.3324C27.7476 12.3324 28.6681 13.2529 28.6681 14.3884V19.9748L29.6109 19.032L30.1924 19.6135Z\" fill=\"#858585\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M21.387 26.1927L19.4514 24.2571L21.387 22.3215L21.9685 22.9031L21.0257 23.8459H26.6121C27.2934 23.8459 27.8457 23.2936 27.8457 22.6123H28.6681C28.6681 23.7478 27.7476 24.6683 26.6121 24.6683H21.0257L21.9685 25.6111L21.387 26.1927Z\" fill=\"#858585\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M14.8078 17.3872L16.7434 15.4516L18.6789 17.3872L18.0974 17.9687L17.1546 17.0259L17.1546 22.6123C17.1546 23.2936 17.7069 23.8459 18.3882 23.8459V24.6683C17.2527 24.6683 16.3322 23.7478 16.3322 22.6123L16.3322 17.0259L15.3894 17.9687L14.8078 17.3872Z\" fill=\"#858585\"/>\n`;\n    const nightIcon = `\n<ellipse cx=\"22.5\" cy=\"18.5\" rx=\"12.5\" ry=\"12.5\" fill=\"#D9D9D9\"/>\n<path d=\"M15.4977 16.3251C16.0727 16.8675 16.7628 17.1386 17.5678 17.1386C18.3729 17.1386 19.0629 16.8675 19.638 16.3251C20.213 15.7827 20.5005 15.1319 20.5005 14.3726C20.5005 13.6133 20.213 12.9624 19.638 12.4201C19.4884 12.279 19.3246 12.1516 19.1463 12.0377C18.968 11.9238 18.7811 11.8343 18.5856 11.7692C18.7811 12.279 18.8185 12.7997 18.6978 13.3312C18.577 13.8628 18.3154 14.3183 17.9128 14.698C17.5103 15.0777 17.0273 15.3244 16.4637 15.4383C15.9002 15.5522 15.3482 15.517 14.8076 15.3326C14.8766 15.517 14.9715 15.6932 15.0923 15.8614C15.213 16.0295 15.3482 16.1841 15.4977 16.3251Z\" fill=\"#858585\"/>\n<path d=\"M26.3009 25.2308H24.0772V22.0848H20.1859L23.5213 17.8903H21.2977L25.189 12.647L29.0804 17.8903H26.8568L30.1922 22.0848H26.3009V25.2308Z\" fill=\"#858585\"/>\n`;\n    const fanIcon = `<ellipse\n            id=\"Ellipse 3\"\n            cx=\"22.5\"\n            cy=\"18.5\"\n            rx=\"12.5\"\n            ry=\"12.5\"\n            fill=\"#00AA6C\"\n          />\n          <path\n            id=\"mode_fan\"\n            d=\"M21.557 25.2311C20.9849 25.2311 20.5502 25.06 20.2529 24.7178C19.9557 24.3757 19.807 23.9859 19.807 23.5484C19.807 23.2567 19.8715 22.9735 20.0005 22.6986C20.1295 22.4238 20.3287 22.1966 20.5979 22.0171C20.8447 21.8601 21.0438 21.6582 21.1952 21.4114C21.3467 21.1646 21.4504 20.9009 21.5065 20.6205L21.3046 20.5195C21.2373 20.4859 21.1756 20.4466 21.1195 20.4017L19.5714 20.957C19.3807 21.0243 19.1956 21.0804 19.0162 21.1253C18.8367 21.1702 18.6516 21.1926 18.4609 21.1926C17.7541 21.1926 17.1287 20.8841 16.5847 20.2671C16.0406 19.6501 15.7686 18.7471 15.7686 17.558C15.7686 16.9859 15.9396 16.5512 16.2818 16.2539C16.6239 15.9566 17.0081 15.808 17.4344 15.808C17.7261 15.808 18.0121 15.8725 18.2926 16.0015C18.573 16.1305 18.803 16.3296 18.9825 16.5989C19.1395 16.8457 19.3415 17.0448 19.5883 17.1962C19.8351 17.3477 20.0987 17.4514 20.3791 17.5075L20.4801 17.3056C20.5137 17.2383 20.553 17.1766 20.5979 17.1205L20.0426 15.5724C19.9753 15.3817 19.9192 15.1966 19.8743 15.0171C19.8295 14.8376 19.807 14.6582 19.807 14.4787C19.807 13.7607 20.1155 13.1297 20.7325 12.5856C21.3495 12.0416 22.2525 11.7695 23.4416 11.7695C24.0137 11.7695 24.4484 11.9406 24.7457 12.2828C25.043 12.6249 25.1916 13.0091 25.1916 13.4354C25.1916 13.7271 25.1271 14.0131 24.9981 14.2936C24.8691 14.574 24.67 14.804 24.4008 14.9835C24.154 15.1405 23.9549 15.3424 23.8034 15.5892C23.652 15.836 23.5482 16.0997 23.4921 16.3801L23.694 16.4811C23.7613 16.5147 23.823 16.554 23.8791 16.5989L25.4272 16.0267C25.6179 15.9594 25.8002 15.9061 25.9741 15.8669C26.148 15.8276 26.3303 15.808 26.521 15.808C27.4296 15.808 28.1083 16.1838 28.557 16.9354C29.0057 17.687 29.2301 18.5227 29.2301 19.4426C29.2301 20.0147 29.0506 20.4494 28.6916 20.7467C28.3327 21.044 27.9344 21.1926 27.4969 21.1926C27.2165 21.1926 26.9444 21.1281 26.6808 20.9991C26.4172 20.8701 26.1956 20.671 26.0162 20.4017C25.8591 20.1549 25.6572 19.9558 25.4104 19.8044C25.1636 19.6529 24.9 19.5492 24.6195 19.4931L24.5186 19.695C24.4849 19.7623 24.4456 19.824 24.4008 19.8801L24.9561 21.4282C25.0234 21.6077 25.0795 21.7787 25.1243 21.9414C25.1692 22.1041 25.1916 22.2751 25.1916 22.4546C25.2028 23.1838 24.9 23.8288 24.283 24.3897C23.666 24.9506 22.7573 25.2311 21.557 25.2311ZM22.4993 19.5099C22.7798 19.5099 23.0182 19.4118 23.2145 19.2154C23.4108 19.0191 23.5089 18.7807 23.5089 18.5003C23.5089 18.2199 23.4108 17.9815 23.2145 17.7852C23.0182 17.5888 22.7798 17.4907 22.4993 17.4907C22.2189 17.4907 21.9805 17.5888 21.7842 17.7852C21.5879 17.9815 21.4897 18.2199 21.4897 18.5003C21.4897 18.7807 21.5879 19.0191 21.7842 19.2154C21.9805 19.4118 22.2189 19.5099 22.4993 19.5099ZM21.7253 16.2791C21.7926 16.2567 21.8627 16.2371 21.9356 16.2203C22.0085 16.2034 22.0787 16.1894 22.146 16.1782C22.2357 15.707 22.4068 15.2695 22.6592 14.8657C22.9116 14.4618 23.2453 14.1253 23.6604 13.8561C23.7165 13.8112 23.7613 13.7551 23.795 13.6878C23.8287 13.6205 23.8455 13.5364 23.8455 13.4354C23.8455 13.3457 23.8118 13.2699 23.7445 13.2082C23.6772 13.1465 23.5762 13.1157 23.4416 13.1157C23.0153 13.1157 22.533 13.2082 21.9945 13.3933C21.4561 13.5784 21.1756 13.9402 21.1532 14.4787C21.1532 14.5796 21.1672 14.675 21.1952 14.7647C21.2233 14.8545 21.2485 14.9386 21.271 15.0171L21.7253 16.2791ZM18.4609 19.8465C18.6179 19.8465 18.803 19.8072 19.0162 19.7287L20.2782 19.2743C20.2557 19.207 20.2361 19.1369 20.2193 19.064C20.2024 18.9911 20.1884 18.921 20.1772 18.8537C19.7061 18.7639 19.2686 18.5928 18.8647 18.3404C18.4609 18.088 18.1243 17.7543 17.8551 17.3392C17.8102 17.2832 17.7513 17.2383 17.6784 17.2046C17.6055 17.171 17.5242 17.1541 17.4344 17.1541C17.3335 17.1541 17.2549 17.1878 17.1988 17.2551C17.1428 17.3224 17.1147 17.4234 17.1147 17.558C17.1147 18.1638 17.2297 18.6966 17.4597 19.1566C17.6896 19.6165 18.0234 19.8465 18.4609 19.8465ZM21.557 23.8849C22.0843 23.8849 22.6031 23.7783 23.1135 23.5652C23.6239 23.3521 23.8679 22.9819 23.8455 22.4546C23.8455 22.3649 23.8315 22.2807 23.8034 22.2022C23.7754 22.1237 23.7501 22.0508 23.7277 21.9835L23.2734 20.7215C23.2061 20.7439 23.1359 20.7635 23.063 20.7803C22.9901 20.7972 22.92 20.8112 22.8527 20.8224C22.7629 21.2936 22.5919 21.7311 22.3395 22.1349C22.0871 22.5388 21.7533 22.8753 21.3383 23.1445C21.2822 23.1894 21.2345 23.2483 21.1952 23.3212C21.156 23.3941 21.142 23.4699 21.1532 23.5484C21.1644 23.6381 21.198 23.7166 21.2541 23.784C21.3102 23.8513 21.4112 23.8849 21.557 23.8849ZM27.4969 19.8465C27.5979 19.8465 27.6876 19.8184 27.7662 19.7623C27.8447 19.7062 27.8839 19.5997 27.8839 19.4426C27.8839 19.0163 27.7942 18.5311 27.6147 17.9871C27.4352 17.443 27.0706 17.1654 26.521 17.1541C26.42 17.1541 26.3246 17.1654 26.2349 17.1878C26.1452 17.2102 26.061 17.2327 25.9825 17.2551L24.7205 17.7263C24.7429 17.7936 24.7625 17.8637 24.7794 17.9366C24.7962 18.0095 24.8102 18.0796 24.8214 18.1469C25.2926 18.2367 25.7301 18.4078 26.1339 18.6602C26.5378 18.9126 26.8743 19.2463 27.1436 19.6614C27.1772 19.7174 27.2277 19.7623 27.295 19.796C27.3623 19.8296 27.4296 19.8465 27.4969 19.8465Z\"\n            fill=\"#424142\"\n          />`;\n\n    const bars = tab.querySelectorAll(\".bar\");\n    const fanSpeedValue = tab.querySelector(\n        \"#fanSpeedValue\");\n    const icon = tab.querySelector(\"#fanMode\");\n\n    if (newValue === 0) { // \"auto\" is mapped to 0\n        bars.forEach((bar) => {\n            bar.style.visibility = \"hidden\";\n        });\n        icon.innerHTML = autoIcon;\n        fanSpeedValue.textContent = 'Auto';\n        fanSpeedValue.setAttribute(\n            \"text-anchor\", \"middle\");\n    } else if (newValue ===\n        6) { // \"night\" is mapped to 6\n        bars.forEach((bar) => {\n            bar.style.visibility = \"hidden\";\n        });\n        icon.innerHTML = nightIcon;\n        fanSpeedValue.textContent = 'Night';\n        fanSpeedValue.setAttribute(\n            \"text-anchor\", \"middle\");\n    } else {\n        icon.innerHTML = fanIcon;\n        bars.forEach((bar, index) => {\n            bar.style.visibility = index <\n                newValue ? \"visible\" :\n                \"hidden\";\n        });\n        fanSpeedValue.textContent = newValue;\n        fanSpeedValue.removeAttribute(\"text-anchor\");\n\n    }\n}\n\n// self.onResize = function() {\n//     var datasourceTitleFontSize = self.ctx.height / 8;\n//     if (self.ctx.width / self.ctx.height <= 1.5) {\n//         datasourceTitleFontSize = self.ctx.width / 12;\n//     }\n//     datasourceTitleFontSize = Math.min(\n//         datasourceTitleFontSize, 20);\n//     for (var i = 0; i < self.ctx.datasourceTitleCells\n//         .length; i++) {\n//         self.ctx.datasourceTitleCells[i].css(\n//             'font-size', datasourceTitleFontSize +\n//             'px');\n//     }\n//     var valueFontSize = self.ctx.height / 9;\n//     var labelFontSize = self.ctx.height / 9;\n//     if (self.ctx.width / self.ctx.height <= 1.5) {\n//         valueFontSize = self.ctx.width / 15;\n//         labelFontSize = self.ctx.width / 15;\n//     }\n//     valueFontSize = Math.min(valueFontSize, 18);\n//     labelFontSize = Math.min(labelFontSize, 18);\n\n//     for (i = 0; i < self.ctx.valueCells; i++) {\n//         self.ctx.valueCells[i].css('font-size',\n//             valueFontSize + 'px');\n//         self.ctx.valueCells[i].css('height',\n//             valueFontSize * 2.5 + 'px');\n//         self.ctx.valueCells[i].css('padding', '0px ' +\n//             valueFontSize + 'px');\n//         self.ctx.labelCells[i].css('font-size',\n//             labelFontSize + 'px');\n//         self.ctx.labelCells[i].css('height',\n//             labelFontSize * 2.5 + 'px');\n//         self.ctx.labelCells[i].css('padding', '0px ' +\n//             labelFontSize + 'px');\n//     }\n// }\n\n// self.onDestroy = function() {}",
      "settingsSchema" : "{}",
      "dataKeySettingsSchema" : "{}\n",
      "defaultConfig" : "{\"showTitle\":false,\"backgroundColor\":\"#fff\",\"color\":\"rgba(0, 0, 0, 0.87)\",\"padding\":\"0px\",\"settings\":{},\"title\":\"AC Control\",\"showTitleIcon\":false,\"dropShadow\":true,\"enableFullscreen\":true,\"widgetStyle\":{},\"widgetCss\":\"\",\"pageSize\":1024,\"noDataDisplayMessage\":\"\",\"showLegend\":false,\"datasources\":[],\"timewindow\":{\"realtime\":{\"timewindowMs\":60000}}}"
    },
    "externalId" : null,
    "id" : {
      "entityType" : "WIDGET_TYPE",
      "id" : "ec7ab800-77dc-11ee-819d-0f0d9d5d78ac"
    }
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}